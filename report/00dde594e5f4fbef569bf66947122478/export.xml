<?xml version="1.0"?>
<ScanGroup ExportedOn="12/8/2017, 04:20">
 <Scan>
  <Name><![CDATA[Scan Thread 1 ( http://zhaosheng.lyu.edu.cn )]]></Name>
  <ShortName><![CDATA[Scan Thread 1]]></ShortName>
  <StartURL><![CDATA[http://zhaosheng.lyu.edu.cn]]></StartURL>
  <StartTime><![CDATA[12/8/2017, 03:47:25]]></StartTime>
  <FinishTime><![CDATA[12/8/2017, 04:20:53]]></FinishTime>
  <ScanTime><![CDATA[33 minutes, 28 seconds]]></ScanTime>
  <Aborted><![CDATA[True]]></Aborted>
  <Responsive><![CDATA[True]]></Responsive>
  <Banner><![CDATA[Microsoft-IIS/7.0]]></Banner>
  <Os><![CDATA[Windows]]></Os>
  <WebServer><![CDATA[IIS]]></WebServer>
  <Technologies><![CDATA[ASP.NET]]></Technologies>
  <KBase>
    <KBItem>
     <Name><![CDATA[List of open TCP ports]]></Name>
     <Text><![CDATA[[p]Open Port [bold][dark]80[/dark] / http [/bold][break] Port Banner: [pre]HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 28593
Content-Type: text/html
Server: Microsoft-IIS/7.0
Set-Cookie: ASPSESSIONIDQQQCBAAS=AMILCNHCFBOJMGCCCPAOFLPC; path=/
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:49:14 GMT
Connect ...[/pre][/p]]]></Text>
     <References>
     </References>
    </KBItem>
  </KBase>
  <Crawler StartUrl="http://zhaosheng.lyu.edu.cn/">
   <Cookies>
     <Variable Name="ASPSESSIONIDQQQCBAAS" Type="Cookie">
     </Variable>
     <Variable Name="Forcast2004%2D0089" Type="Cookie">
     </Variable>
     <Variable Name="ASPSESSIONIDQQRQBBQC" Type="Cookie">
     </Variable>
     <Variable Name="ASPSESSIONIDQQRQBBQC" Type="Cookie">
     </Variable>
     <Variable Name="ASPSESSIONIDSSRSCAQD" Type="Cookie">
     </Variable>
     <Variable Name="ASPSESSIONIDSSRSCAQD" Type="Cookie">
     </Variable>
   </Cookies>
   <SiteFiles>
     <SiteFile id="1">
      <Name></Name>
      <URL>/</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/</FullURL>
      <Inputs>
       <Variable Name="/" Type="Path Fragment (suffix .html)">
       </Variable>
       <Variable Name="/" Type="Path Fragment (suffix .html)">
       </Variable>
       <Variable Name="Host" Type="HTTP Header">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="2">
      <Name>News.css</Name>
      <URL>/News.css</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/News.css</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="3">
      <Name>news.css</Name>
      <URL>/news.css</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/news.css</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="4">
      <Name>index.asp</Name>
      <URL>/index.asp</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/index.asp</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="5">
      <Name>zs</Name>
      <URL>/zs/</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/zs/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="6">
      <Name>images</Name>
      <URL>/images/</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/images/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="7">
      <Name>ReadNews.asp</Name>
      <URL>/ReadNews.asp</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ReadNews.asp</FullURL>
      <Inputs>
       <Variable Name="NewsID" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/ReadNews.asp?NewsID=632</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/ReadNews.asp?NewsID=631</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/ReadNews.asp?NewsID=620</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="8">
      <Name>BigClass.asp</Name>
      <URL>/BigClass.asp</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/BigClass.asp</FullURL>
      <Inputs>
       <Variable Name="BigClassid" Type="URL encoded GET">
       </Variable>
       <Variable Name="TypeId" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/BigClass.asp?BigClassid=1&amp;TypeId=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="9">
      <Name>bigClass.asp</Name>
      <URL>/bigClass.asp</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/bigClass.asp</FullURL>
      <Inputs>
       <Variable Name="BigClassid" Type="URL encoded GET">
       </Variable>
       <Variable Name="TypeId" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/bigClass.asp?BigClassid=4&amp;TypeId=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/bigClass.asp?BigClassid=3&amp;TypeId=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="10">
      <Name>img</Name>
      <URL>/img/</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/img/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="11">
      <Name>rel=stylesheet</Name>
      <URL>/rel=stylesheet</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/rel=stylesheet</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="12">
      <Name>pic1</Name>
      <URL>/pic1/</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/pic1/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="13">
      <Name>BigClass-ld.asp</Name>
      <URL>/BigClass-ld.asp</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/BigClass-ld.asp</FullURL>
      <Inputs>
       <Variable Name="BigClassid" Type="URL encoded GET">
       </Variable>
       <Variable Name="TypeId" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/BigClass-ld.asp?BigClassid=2&amp;TypeId=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="14">
      <Name>bigClass-zy.asp</Name>
      <URL>/bigClass-zy.asp</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/bigClass-zy.asp</FullURL>
      <Inputs>
       <Variable Name="BigClassid" Type="URL encoded GET">
       </Variable>
       <Variable Name="TypeId" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/bigClass-zy.asp?BigClassid=16&amp;TypeId=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="15">
      <Name>nosmallClass.asp</Name>
      <URL>/nosmallClass.asp</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/nosmallClass.asp</FullURL>
      <Inputs>
       <Variable Name="BigClassid" Type="URL encoded GET">
       </Variable>
       <Variable Name="TypeId" Type="URL encoded GET">
       </Variable>
       <Variable Name="BigClassid" Type="URL encoded GET">
       </Variable>
       <Variable Name="typeid" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/nosmallClass.asp?BigClassid=8&amp;TypeId=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/nosmallClass.asp?BigClassid=13&amp;TypeId=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/nosmallClass.asp?BigClassid=7&amp;TypeId=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/nosmallClass.asp?BigClassid=4&amp;typeid=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/nosmallClass.asp?BigClassid=3&amp;typeid=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="16">
      <Name>mouse.ani</Name>
      <URL>/mouse.ani</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/mouse.ani</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="17">
      <Name>pic2</Name>
      <URL>/pic2/</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/pic2/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="18">
      <Name>site.css</Name>
      <URL>/site.css</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/site.css</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="19">
      <Name>Admin_Exit.asp</Name>
      <URL>/Admin_Exit.asp</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/Admin_Exit.asp</FullURL>
      <Inputs>
       <Variable Name="action" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/Admin_Exit.asp?action=quit</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="20">
      <Name>inc</Name>
      <URL>/inc/</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/inc/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="21">
      <Name>js.js</Name>
      <URL>/inc/js.js</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/inc/js.js</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="22">
      <Name>exit.js</Name>
      <URL>/inc/exit.js</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/inc/exit.js</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="23">
      <Name>new_news.files</Name>
      <URL>/new_news.files</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/new_news.files</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="24">
      <Name>uploadfile</Name>
      <URL>/uploadfile/</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/uploadfile/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="25">
      <Name>jpg</Name>
      <URL>/uploadfile/jpg/</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/uploadfile/jpg/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="26">
      <Name>2017-7</Name>
      <URL>/uploadfile/jpg/2017-7/</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/uploadfile/jpg/2017-7/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="27">
      <Name>2017-6</Name>
      <URL>/uploadfile/jpg/2017-6/</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/uploadfile/jpg/2017-6/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="28">
      <Name>2016-6</Name>
      <URL>/uploadfile/jpg/2016-6/</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/uploadfile/jpg/2016-6/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="29">
      <Name>2015-4</Name>
      <URL>/uploadfile/jpg/2015-4/</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/uploadfile/jpg/2015-4/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="30">
      <Name>pic3</Name>
      <URL>/pic3/</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/pic3/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="31">
      <Name>IMAGES</Name>
      <URL>/IMAGES/</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/IMAGES/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="32">
      <Name>smallClass.asp</Name>
      <URL>/smallClass.asp</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/smallClass.asp</FullURL>
      <Inputs>
       <Variable Name="BigClassid" Type="URL encoded GET">
       </Variable>
       <Variable Name="smallClassid" Type="URL encoded GET">
       </Variable>
       <Variable Name="typeid" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/smallClass.asp?BigClassid=3&amp;smallClassid=7&amp;typeid=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/smallClass.asp?BigClassid=3&amp;smallClassid=14&amp;typeid=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/smallClass.asp?BigClassid=3&amp;smallClassid=8&amp;typeid=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/smallClass.asp?BigClassid=2&amp;smallClassid=1&amp;typeid=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="33">
      <Name>ebook4</Name>
      <URL>/ebook4/</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="34">
      <Name>index.html</Name>
      <URL>/ebook4/index.html</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/index.html</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="35">
      <Name>css</Name>
      <URL>/ebook4/css/</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/css/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="36">
      <Name>magazine.css</Name>
      <URL>/ebook4/css/magazine.css</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/css/magazine.css</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="37">
      <Name>js</Name>
      <URL>/ebook4/js/</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/js/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="38">
      <Name>jquery.min.1.7.js</Name>
      <URL>/ebook4/js/jquery.min.1.7.js</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/js/jquery.min.1.7.js</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="39">
      <Name>modernizr.2.5.3.min.js</Name>
      <URL>/ebook4/js/modernizr.2.5.3.min.js</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/js/modernizr.2.5.3.min.js</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="40">
      <Name>hash.js</Name>
      <URL>/ebook4/js/hash.js</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/js/hash.js</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="41">
      <Name>turn.js</Name>
      <URL>/ebook4/js/turn.js</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/js/turn.js</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="42">
      <Name>turn.html4.min.js</Name>
      <URL>/ebook4/js/turn.html4.min.js</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/js/turn.html4.min.js</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="43">
      <Name>zoom.min.js</Name>
      <URL>/ebook4/js/zoom.min.js</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/js/zoom.min.js</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="44">
      <Name>magazine.js</Name>
      <URL>/ebook4/js/magazine.js</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/js/magazine.js</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="45">
      <Name>pics</Name>
      <URL>/ebook4/pics/</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pics/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="46">
      <Name>pages</Name>
      <URL>/ebook4/pages/</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="47">
      <Name>1-regions.json</Name>
      <URL>/ebook4/pages/1-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/1-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="48">
      <Name>2-regions.json</Name>
      <URL>/ebook4/pages/2-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/2-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="49">
      <Name>3-regions.json</Name>
      <URL>/ebook4/pages/3-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/3-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="50">
      <Name>4-regions.json</Name>
      <URL>/ebook4/pages/4-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/4-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="51">
      <Name>5-regions.json</Name>
      <URL>/ebook4/pages/5-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/5-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="52">
      <Name>6-regions.json</Name>
      <URL>/ebook4/pages/6-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/6-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="53">
      <Name>7-regions.json</Name>
      <URL>/ebook4/pages/7-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/7-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="54">
      <Name>8-regions.json</Name>
      <URL>/ebook4/pages/8-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/8-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="55">
      <Name>9-regions.json</Name>
      <URL>/ebook4/pages/9-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/9-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="56">
      <Name>10-regions.json</Name>
      <URL>/ebook4/pages/10-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/10-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="57">
      <Name>11-regions.json</Name>
      <URL>/ebook4/pages/11-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/11-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="58">
      <Name>12-regions.json</Name>
      <URL>/ebook4/pages/12-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/12-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="59">
      <Name>13-regions.json</Name>
      <URL>/ebook4/pages/13-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/13-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="60">
      <Name>14-regions.json</Name>
      <URL>/ebook4/pages/14-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/14-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="61">
      <Name>15-regions.json</Name>
      <URL>/ebook4/pages/15-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/15-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="62">
      <Name>16-regions.json</Name>
      <URL>/ebook4/pages/16-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/16-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="63">
      <Name>17-regions.json</Name>
      <URL>/ebook4/pages/17-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/17-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="64">
      <Name>18-regions.json</Name>
      <URL>/ebook4/pages/18-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/18-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="65">
      <Name>19-regions.json</Name>
      <URL>/ebook4/pages/19-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/19-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="66">
      <Name>20-regions.json</Name>
      <URL>/ebook4/pages/20-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/20-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="67">
      <Name>21-regions.json</Name>
      <URL>/ebook4/pages/21-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/21-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="68">
      <Name>22-regions.json</Name>
      <URL>/ebook4/pages/22-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/22-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="69">
      <Name>23-regions.json</Name>
      <URL>/ebook4/pages/23-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/23-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="70">
      <Name>24-regions.json</Name>
      <URL>/ebook4/pages/24-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/24-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="71">
      <Name>25-regions.json</Name>
      <URL>/ebook4/pages/25-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/25-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="72">
      <Name>26-regions.json</Name>
      <URL>/ebook4/pages/26-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/26-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="73">
      <Name>27-regions.json</Name>
      <URL>/ebook4/pages/27-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/27-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="74">
      <Name>28-regions.json</Name>
      <URL>/ebook4/pages/28-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/28-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="75">
      <Name>29-regions.json</Name>
      <URL>/ebook4/pages/29-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/29-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="76">
      <Name>30-regions.json</Name>
      <URL>/ebook4/pages/30-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/30-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="77">
      <Name>31-regions.json</Name>
      <URL>/ebook4/pages/31-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/31-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="78">
      <Name>32-regions.json</Name>
      <URL>/ebook4/pages/32-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/32-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="79">
      <Name>33-regions.json</Name>
      <URL>/ebook4/pages/33-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/33-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="80">
      <Name>34-regions.json</Name>
      <URL>/ebook4/pages/34-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/34-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="81">
      <Name>35-regions.json</Name>
      <URL>/ebook4/pages/35-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/35-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="82">
      <Name>36-regions.json</Name>
      <URL>/ebook4/pages/36-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/36-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="83">
      <Name>37-regions.json</Name>
      <URL>/ebook4/pages/37-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/37-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="84">
      <Name>38-regions.json</Name>
      <URL>/ebook4/pages/38-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/38-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="85">
      <Name>39-regions.json</Name>
      <URL>/ebook4/pages/39-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/39-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="86">
      <Name>40-regions.json</Name>
      <URL>/ebook4/pages/40-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/40-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="87">
      <Name>41-regions.json</Name>
      <URL>/ebook4/pages/41-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/41-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="88">
      <Name>44-regions.json</Name>
      <URL>/ebook4/pages/44-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/44-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="89">
      <Name>43-regions.json</Name>
      <URL>/ebook4/pages/43-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/43-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="90">
      <Name>42-regions.json</Name>
      <URL>/ebook4/pages/42-regions.json</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook4/pages/42-regions.json</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="91">
      <Name>readnews-zy.asp</Name>
      <URL>/readnews-zy.asp</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/readnews-zy.asp</FullURL>
      <Inputs>
       <Variable Name="NewsID" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/readnews-zy.asp?NewsID=588</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/readnews-zy.asp?NewsID=532</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/readnews-zy.asp?NewsID=544</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="92">
      <Name>SmallClass.asp</Name>
      <URL>/SmallClass.asp</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/SmallClass.asp</FullURL>
      <Inputs>
       <Variable Name="BigClassID" Type="URL encoded GET">
       </Variable>
       <Variable Name="SmallClassID" Type="URL encoded GET">
       </Variable>
       <Variable Name="typeid" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/SmallClass.asp?BigClassID=16&amp;SmallClassID=39&amp;typeid=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/SmallClass.asp?BigClassID=16&amp;SmallClassID=23&amp;typeid=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/SmallClass.asp?BigClassID=16&amp;SmallClassID=32&amp;typeid=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="93">
      <Name>BigClass-zy.asp</Name>
      <URL>/BigClass-zy.asp</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/BigClass-zy.asp</FullURL>
      <Inputs>
       <Variable Name="BigClassid" Type="URL encoded GET">
       </Variable>
       <Variable Name="TypeId" Type="URL encoded GET">
       </Variable>
      </Inputs>
      <Variations>
        <Variation>
         <URL>http://zhaosheng.lyu.edu.cn/BigClass-zy.asp?BigClassid=16&amp;TypeId=1</URL>
         <PostData><![CDATA[]]></PostData>
        </Variation>
      </Variations>
     </SiteFile>
     <SiteFile id="94">
      <Name>pic</Name>
      <URL>/pic/</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/pic/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="95">
      <Name>ebook2017</Name>
      <URL>/ebook2017/</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook2017/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="96">
      <Name>index.html</Name>
      <URL>/ebook2017/index.html</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook2017/index.html</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="97">
      <Name>css</Name>
      <URL>/ebook2017/css/</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook2017/css/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="98">
      <Name>magazine.css</Name>
      <URL>/ebook2017/css/magazine.css</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook2017/css/magazine.css</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="99">
      <Name>js</Name>
      <URL>/ebook2017/js/</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook2017/js/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="100">
      <Name>jquery.min.1.7.js</Name>
      <URL>/ebook2017/js/jquery.min.1.7.js</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook2017/js/jquery.min.1.7.js</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="101">
      <Name>modernizr.2.5.3.min.js</Name>
      <URL>/ebook2017/js/modernizr.2.5.3.min.js</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook2017/js/modernizr.2.5.3.min.js</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="102">
      <Name>hash.js</Name>
      <URL>/ebook2017/js/hash.js</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook2017/js/hash.js</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="103">
      <Name>turn.js</Name>
      <URL>/ebook2017/js/turn.js</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook2017/js/turn.js</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="104">
      <Name>turn.html4.min.js</Name>
      <URL>/ebook2017/js/turn.html4.min.js</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook2017/js/turn.html4.min.js</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="105">
      <Name>zoom.min.js</Name>
      <URL>/ebook2017/js/zoom.min.js</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook2017/js/zoom.min.js</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="106">
      <Name>magazine.js</Name>
      <URL>/ebook2017/js/magazine.js</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook2017/js/magazine.js</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
     <SiteFile id="107">
      <Name>pics</Name>
      <URL>/ebook2017/pics/</URL>
      <FullURL>http://zhaosheng.lyu.edu.cn/ebook2017/pics/</FullURL>
      <Inputs>
      </Inputs>
      <Variations>
      </Variations>
     </SiteFile>
   </SiteFiles>
  </Crawler>
    <ReportItems>

      <ReportItem id="0" color="blue">
       <Name><![CDATA[ASP.NET version disclosure]]></Name>
       <ModuleName><![CDATA[Scripting (ASP_NET_Error_Message.script)]]></ModuleName>
       <Details><![CDATA[<br/>Version information found: <font color="dark">2.0.50727</font>]]></Details>
       <Affects><![CDATA[/]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[low]]></Severity>
       <Type><![CDATA[Configuration]]></Type>
       <Impact><![CDATA[The HTTP header may disclose sensitive information. This information can be used to launch further attacks.]]></Impact>
       <Description><![CDATA[The HTTP responses returned by this web application include anheader named <b>X-AspNet-Version</b>. The value of this header is used by Visual Studio to determine which version of ASP.NET is in use. It is not necessary for production sites and should be disabled.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Apply the following changes to the web.config file to prevent ASP.NET version disclosure:
<pre wrap="virtual">
&lt;System.Web&gt;
 &lt;httpRuntime enableVersionHeader=&quot;false&quot; /&gt;
&lt;/System.Web&gt;
</pre>]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /|~.aspx HTTP/1.1
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 500 Internal Server Error
Cache-Control: private
Content-Type: text/html; charset=utf-8
Server: Microsoft-IIS/7.0
X-AspNet-Version: 2.0.50727
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:47:06 GMT
Content-Length: 2907
]]></Response>
       </TechnicalDetails>
       <CWE id="200"><![CDATA[CWE-200]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:N/I:N/A:N]]></Descriptor>
          <Score><![CDATA[0.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no impact to the confidentiality of the system.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N]]></Descriptor>
          <Score><![CDATA[7.5]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no loss of integrity within the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[HttpRuntimeSection.EnableVersionHeader Property]]></Database>
          <URL><![CDATA[http://msdn.microsoft.com/en-us/library/system.web.configuration.httpruntimesection.enableversionheader.aspx]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="1" color="green">
       <Name><![CDATA[Microsoft IIS version disclosure]]></Name>
       <ModuleName><![CDATA[Scripting (ASP_NET_Error_Message.script)]]></ModuleName>
       <Details><![CDATA[<br/>Version information found: <font color="dark">Microsoft-IIS/7.0</font>]]></Details>
       <Affects><![CDATA[/]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[info]]></Severity>
       <Type><![CDATA[Configuration]]></Type>
       <Impact><![CDATA[The HTTP header may disclose sensitive information. This information can be used to launch further attacks.]]></Impact>
       <Description><![CDATA[The HTTP responses returned by this web application include a header named <b>Server</b>. The value of this header includes the version of Microsoft IIS server.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Microsoft IIS should be configured to remove unwanted HTTP response headers from the response. Consult web references for more information.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /|~.aspx HTTP/1.1
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 500 Internal Server Error
Cache-Control: private
Content-Type: text/html; charset=utf-8
Server: Microsoft-IIS/7.0
X-AspNet-Version: 2.0.50727
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:47:06 GMT
Content-Length: 2907
]]></Response>
       </TechnicalDetails>
       <CWE id="200"><![CDATA[CWE-200]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:N/I:N/A:N]]></Descriptor>
          <Score><![CDATA[0.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no impact to the confidentiality of the system.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N]]></Descriptor>
          <Score><![CDATA[7.5]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no loss of integrity within the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Remove Unwanted HTTP Response Headers]]></Database>
          <URL><![CDATA[http://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="2" color="blue">
       <Name><![CDATA[Clickjacking: X-Frame-Options header missing]]></Name>
       <ModuleName><![CDATA[Scripting (Clickjacking_X_Frame_Options.script)]]></ModuleName>
       <Details><![CDATA[No details are available.]]></Details>
       <Affects><![CDATA[Web Server]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[low]]></Severity>
       <Type><![CDATA[Configuration]]></Type>
       <Impact><![CDATA[The impact depends on the affected web application. ]]></Impact>
       <Description><![CDATA[Clickjacking (User Interface redress attack, UI redress attack, UI redressing) is a malicious technique of tricking a Web user into clicking on something different from what the user perceives they are clicking on, thus potentially revealing confidential information or taking control of their computer while clicking on seemingly innocuous web pages. <br/><br/>
The server didn't return an <b>X-Frame-Options</b> header which means that this website could be at risk of a clickjacking attack. The X-Frame-Options HTTP response header can be used to indicate whether or not a browser should be allowed to render a page inside a frame or iframe. Sites can use this to avoid clickjacking attacks, by ensuring that their content is not embedded into other sites.
]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Configure your web server to include an  X-Frame-Options header. Consult Web references for more information about the possible values for this header.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET / HTTP/1.1
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 28593
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:47:07 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="693"><![CDATA[CWE-693]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:M/Au:N/C:P/I:P/A:P]]></Descriptor>
          <Score><![CDATA[6.8]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Medium]]></AC>
          <ACdesc><![CDATA[The access conditions are somewhat specialized.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[Partial]]></A>
          <Adesc><![CDATA[There is reduced performance or interruptions in resource availability.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[]]></Descriptor>
          <Score><![CDATA[]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[]]></AV>
          <AVdesc><![CDATA[]]></AVdesc>
          <AC><![CDATA[]]></AC>
          <ACdesc><![CDATA[]]></ACdesc>
          <PR><![CDATA[]]></PR>
          <PRdesc><![CDATA[]]></PRdesc>
          <UI><![CDATA[]]></UI>
          <UIdesc><![CDATA[]]></UIdesc>
          <S><![CDATA[]]></S>
          <Sdesc><![CDATA[]]></Sdesc>
          <C><![CDATA[]]></C>
          <Cdesc><![CDATA[]]></Cdesc>
          <I><![CDATA[]]></I>
          <Idesc><![CDATA[]]></Idesc>
          <A><![CDATA[]]></A>
          <Adesc><![CDATA[]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[The X-Frame-Options response header]]></Database>
          <URL><![CDATA[https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Clickjacking]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Clickjacking]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Clickjacking]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/Clickjacking]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Defending with Content Security Policy frame-ancestors directive]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/Clickjacking_Defense_Cheat_Sheet#Defending_with_Content_Security_Policy_frame-ancestors_directive]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Frame Buster Buster]]></Database>
          <URL><![CDATA[http://stackoverflow.com/questions/958997/frame-buster-buster-buster-code-needed]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Clickjacking Protection for Java EE]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/Clickjacking_Protection_for_Java_EE]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="3" color="green">
       <Name><![CDATA[Broken links]]></Name>
       <ModuleName><![CDATA[Crawler]]></ModuleName>
       <Details><![CDATA[For a complete list of URLs linking to this file, go to Site Structure &gt; Locate and select the file (marked as &quot;Not Found&quot;) &gt; select Referrers Tab from the bottom of the Information pane.]]></Details>
       <Affects><![CDATA[/rel=stylesheet]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[info]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[Problems navigating the site.]]></Impact>
       <Description><![CDATA[A broken link refers to any link that should take you to a document, image or webpage, that actually results in an error. This page was linked from the website but it is inaccessible.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Remove the links to this file or make it accessible.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /rel=stylesheet HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://zhaosheng.lyu.edu.cn/
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: filelist;aspectalerts
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 404 Not Found
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:47:07 GMT
Content-Length: 1163
]]></Response>
       </TechnicalDetails>
       <CWE id="16"><![CDATA[CWE-16]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:N/I:N/A:N]]></Descriptor>
          <Score><![CDATA[0.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no impact to the confidentiality of the system.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[]]></Descriptor>
          <Score><![CDATA[]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[]]></AV>
          <AVdesc><![CDATA[]]></AVdesc>
          <AC><![CDATA[]]></AC>
          <ACdesc><![CDATA[]]></ACdesc>
          <PR><![CDATA[]]></PR>
          <PRdesc><![CDATA[]]></PRdesc>
          <UI><![CDATA[]]></UI>
          <UIdesc><![CDATA[]]></UIdesc>
          <S><![CDATA[]]></S>
          <Sdesc><![CDATA[]]></Sdesc>
          <C><![CDATA[]]></C>
          <Cdesc><![CDATA[]]></Cdesc>
          <I><![CDATA[]]></I>
          <Idesc><![CDATA[]]></Idesc>
          <A><![CDATA[]]></A>
          <Adesc><![CDATA[]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
      <References></References>
      </ReportItem>

      <ReportItem id="4" color="green">
       <Name><![CDATA[Broken links]]></Name>
       <ModuleName><![CDATA[Crawler]]></ModuleName>
       <Details><![CDATA[For a complete list of URLs linking to this file, go to Site Structure &gt; Locate and select the file (marked as &quot;Not Found&quot;) &gt; select Referrers Tab from the bottom of the Information pane.]]></Details>
       <Affects><![CDATA[/mouse.ani]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[info]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[Problems navigating the site.]]></Impact>
       <Description><![CDATA[A broken link refers to any link that should take you to a document, image or webpage, that actually results in an error. This page was linked from the website but it is inaccessible.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Remove the links to this file or make it accessible.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /mouse.ani HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://zhaosheng.lyu.edu.cn/news.css
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: filelist;aspectalerts
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 404 Not Found
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:47:10 GMT
Content-Length: 1163
]]></Response>
       </TechnicalDetails>
       <CWE id="16"><![CDATA[CWE-16]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:N/I:N/A:N]]></Descriptor>
          <Score><![CDATA[0.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no impact to the confidentiality of the system.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[]]></Descriptor>
          <Score><![CDATA[]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[]]></AV>
          <AVdesc><![CDATA[]]></AVdesc>
          <AC><![CDATA[]]></AC>
          <ACdesc><![CDATA[]]></ACdesc>
          <PR><![CDATA[]]></PR>
          <PRdesc><![CDATA[]]></PRdesc>
          <UI><![CDATA[]]></UI>
          <UIdesc><![CDATA[]]></UIdesc>
          <S><![CDATA[]]></S>
          <Sdesc><![CDATA[]]></Sdesc>
          <C><![CDATA[]]></C>
          <Cdesc><![CDATA[]]></Cdesc>
          <I><![CDATA[]]></I>
          <Idesc><![CDATA[]]></Idesc>
          <A><![CDATA[]]></A>
          <Adesc><![CDATA[]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
      <References></References>
      </ReportItem>

      <ReportItem id="5" color="blue">
       <Name><![CDATA[OPTIONS method is enabled]]></Name>
       <ModuleName><![CDATA[Scripting (Options_Server_Method.script)]]></ModuleName>
       <Details><![CDATA[Methods allowed: <font color="dark"><b>OPTIONS, TRACE, GET, HEAD, POST</b></font>]]></Details>
       <Affects><![CDATA[Web Server]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[low]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[The OPTIONS method may expose sensitive information that may help an malicious user to prepare more advanced attacks.]]></Impact>
       <Description><![CDATA[HTTP OPTIONS method is enabled on this web server. The OPTIONS method provides a list of the methods that are supported by the web server, it represents a request for information about the communication options available on the request/response chain identified by the Request-URI.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[It's recommended to disable OPTIONS Method on the web server.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[OPTIONS / HTTP/1.1
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Allow: OPTIONS, TRACE, GET, HEAD, POST
Server: Microsoft-IIS/7.0
Public: OPTIONS, TRACE, GET, HEAD, POST
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:47:21 GMT
Content-Length: 0
]]></Response>
       </TechnicalDetails>
       <CWE id="200"><![CDATA[CWE-200]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:N/A:N]]></Descriptor>
          <Score><![CDATA[5.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N]]></Descriptor>
          <Score><![CDATA[7.5]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no loss of integrity within the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Testing for HTTP Methods and XST (OWASP-CM-008)]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/Testing_for_HTTP_Methods_and_XST_(OWASP-CM-008)]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="6" color="blue">
       <Name><![CDATA[Cookie without HttpOnly flag set]]></Name>
       <ModuleName><![CDATA[Crawler]]></ModuleName>
       <Details><![CDATA[Cookie name: <font color="dark">&quot;ASPSESSIONIDQQQCBAAS&quot;</font><br/>Cookie domain: <font color="dark">&quot;zhaosheng.lyu.edu.cn&quot;</font><br/>]]></Details>
       <Affects><![CDATA[/]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[low]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[None]]></Impact>
       <Description><![CDATA[This cookie does not have the HTTPOnly flag set. When a cookie is set with the HTTPOnly flag, it instructs the browser that the cookie can only be accessed by the server and not by client-side scripts. This is an important security protection for session cookies.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[If possible, you should set the HTTPOnly flag for this cookie.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET / HTTP/1.1
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 28593
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:47:07 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="16"><![CDATA[CWE-16]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:N/I:N/A:N]]></Descriptor>
          <Score><![CDATA[0.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no impact to the confidentiality of the system.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[]]></Descriptor>
          <Score><![CDATA[]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[]]></AV>
          <AVdesc><![CDATA[]]></AVdesc>
          <AC><![CDATA[]]></AC>
          <ACdesc><![CDATA[]]></ACdesc>
          <PR><![CDATA[]]></PR>
          <PRdesc><![CDATA[]]></PRdesc>
          <UI><![CDATA[]]></UI>
          <UIdesc><![CDATA[]]></UIdesc>
          <S><![CDATA[]]></S>
          <Sdesc><![CDATA[]]></Sdesc>
          <C><![CDATA[]]></C>
          <Cdesc><![CDATA[]]></Cdesc>
          <I><![CDATA[]]></I>
          <Idesc><![CDATA[]]></Idesc>
          <A><![CDATA[]]></A>
          <Adesc><![CDATA[]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
      <References></References>
      </ReportItem>

      <ReportItem id="7" color="blue">
       <Name><![CDATA[Cookie without HttpOnly flag set]]></Name>
       <ModuleName><![CDATA[Crawler]]></ModuleName>
       <Details><![CDATA[Cookie name: <font color="dark">&quot;Forcast2004%2D0089&quot;</font><br/>Cookie domain: <font color="dark">&quot;zhaosheng.lyu.edu.cn&quot;</font><br/>]]></Details>
       <Affects><![CDATA[/]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[low]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[None]]></Impact>
       <Description><![CDATA[This cookie does not have the HTTPOnly flag set. When a cookie is set with the HTTPOnly flag, it instructs the browser that the cookie can only be accessed by the server and not by client-side scripts. This is an important security protection for session cookies.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[If possible, you should set the HTTPOnly flag for this cookie.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET / HTTP/1.1
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 28593
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:47:07 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="16"><![CDATA[CWE-16]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:N/I:N/A:N]]></Descriptor>
          <Score><![CDATA[0.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no impact to the confidentiality of the system.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[]]></Descriptor>
          <Score><![CDATA[]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[]]></AV>
          <AVdesc><![CDATA[]]></AVdesc>
          <AC><![CDATA[]]></AC>
          <ACdesc><![CDATA[]]></ACdesc>
          <PR><![CDATA[]]></PR>
          <PRdesc><![CDATA[]]></PRdesc>
          <UI><![CDATA[]]></UI>
          <UIdesc><![CDATA[]]></UIdesc>
          <S><![CDATA[]]></S>
          <Sdesc><![CDATA[]]></Sdesc>
          <C><![CDATA[]]></C>
          <Cdesc><![CDATA[]]></Cdesc>
          <I><![CDATA[]]></I>
          <Idesc><![CDATA[]]></Idesc>
          <A><![CDATA[]]></A>
          <Adesc><![CDATA[]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
      <References></References>
      </ReportItem>

      <ReportItem id="8" color="red">
       <Name><![CDATA[Cross site scripting (verified)]]></Name>
       <ModuleName><![CDATA[Scripting (XSS.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">BigClassid</font></b> was set to <b><font color="dark">3'&quot;()&amp;%&lt;acx&gt;&lt;ScRiPt &gt;hID3(9097)&lt;/ScRiPt&gt;</font></b>]]></Details>
       <Affects><![CDATA[/smallClass.asp]]></Affects>
       <Parameter><![CDATA[BigClassid]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[Malicious users may inject JavaScript, VBScript, ActiveX, HTML or Flash into a vulnerable application to fool a user in order to gather data from them.
An attacker can steal the session cookie and take over the account, impersonating the user.
It is also possible to modify the content of the page presented to the user.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to Cross Site Scripting (XSS) attacks.<br/><br/>
Cross site scripting (also referred to as XSS) is a vulnerability that allows an attacker to send malicious code (usually in the form of Javascript) to another user.
Because a browser cannot know if the script should be trusted or not, it will execute the script in the user context allowing the attacker to access any cookies or session tokens retained by the browser.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from The Cross Site Scripting FAQ - http://www.cgisecurity.com/articles/xss-faq.shtml </i> 

<h2>Introduction</h2>

<p>Websites today are more complex than ever, containing a lot of dynamic content making the experience for the user more enjoyable. Dynamic content is achieved through the use of web applications which can deliver different output to a user depending on their settings and needs. Dynamic websites suffer from a threat that static websites don't, called &quot;Cross Site Scripting&quot; (or XSS dubbed by other security professionals). Currently small informational tidbits about Cross Site Scripting holes exist but none really explain them to an average person or administrator. This FAQ was written to provide a better understanding of this emerging threat, and to give guidance on detection and prevention.</p>

<h2>&quot;What is Cross Site Scripting?&quot;</h2>

<p>Cross site scripting (also known as XSS) occurs when a web application gathers malicious data from a user. The data is usually gathered in the form of a hyperlink which contains malicious content within it. The user will most likely click on this link from another website, instant message, or simply just reading a web board or email message. Usually the attacker will encode the malicious portion of the link to the site in HEX (or other encoding methods) so the request is less suspicious looking to the user when clicked on. After the data is collected by the web application, it creates an output page for the user containing the malicious data that was originally sent to it, but in a manner to make it appear as valid content from the website. Many popular guestbook and forum programs allow users to submit posts with html and javascript embedded in them. If for example I was logged in as &quot;john&quot; and read a message by &quot;joe&quot; that contained malicious javascript in it, then it may be possible for &quot;joe&quot; to hijack my session just by reading his bulletin board post. Further details on how attacks like this are accomplished via &quot;cookie theft&quot; are explained in detail below.</p>

<h2>&quot;What does XSS and CSS mean?&quot;</h2>

<p>Often people refer to Cross Site Scripting as CSS. There has been a lot of confusion with Cascading Style Sheets (CSS) and cross site scripting. Some security people refer to Cross Site Scripting as XSS. If you hear someone say &quot;I found a XSS hole&quot;, they are talking about Cross Site Scripting for certain.</p>


<h2>&quot;What are the threats of Cross Site Scripting?&quot;</h2>

<p>Often attackers will inject JavaScript, VBScript, ActiveX, HTML, or Flash into a vulnerable application to fool a user (Read below for further details) in order to gather data from them. Everything from account hijacking, changing of user settings, cookie theft/poisoning, or false advertising is possible. New malicious uses are being found every day for XSS attacks. The post below by Brett Moore brings up a good point with regard to &quot;Denial Of Service&quot;, and potential &quot;auto-attacking&quot; of hosts if a user simply reads a post on a message board.</p>

<h2>&quot;What can I do to protect myself as a vendor?&quot;</h2>

<p>This is a simple answer. Never trust user input and always filter metacharacters. This will eliminate the majority of XSS attacks. Converting &lt; and &gt; to &amp;lt; and &amp;gt; is also suggested when it comes to script output. Remember XSS holes can be damaging and costly to your business if abused. Often attackers will disclose these holes to the public, which can erode customer and public confidence in the security and privacy of your organization's site. Filtering &lt; and &gt; alone will not solve all cross site scripting attacks and it is suggested you also attempt to filter out ( and ) by translating them to &amp;#40; and &amp;#41;, and also # and &amp; by translating them to &amp;#35 (#) and &amp;#38 (&amp;).</p>

<h2>&quot;What can I do to protect myself as a user?&quot;</h2>

<p>The easiest way to protect yourself as a user is to only follow links from the main website you wish to view. If you visit one website and it links to CNN for example, instead of clicking on it visit CNN's main site and use its search engine to find the content. This will probably eliminate ninety percent of the problem. Sometimes XSS can be executed automatically when you open an email, email attachment, read a guestbook, or bulletin board post. If you plan on opening an email, or reading a post on a public board from a person you don't know BE CAREFUL. One of the best ways to protect yourself is to turn off Javascript in your browser settings. In IE turn your security settings to high. This can prevent cookie theft, and in general is a safer thing to do.</p>

<h2>&quot;How common are XSS holes?&quot;</h2>

<p>Cross site scripting holes are gaining popularity among hackers as easy holes to find in large websites. Websites from FBI.gov, CNN.com, Time.com, Ebay, Yahoo, Apple computer, Microsoft, Zdnet, Wired, and Newsbytes have all had one form or another of XSS bugs.</p>

<p>Every month roughly 10-25 XSS holes are found in commercial products and advisories are published explaining the threat.</p>


<h2>&quot;Does encryption protect me?&quot;</h2>

<p>Websites that use SSL (https) are in no way more protected than websites that are not encrypted. The web applications work the same way as before, except the attack is taking place in an encrypted connection. People often think that because they see the lock on their browser it means everything is secure. This just isn't the case.</p>


<h2>&quot;Can XSS holes allow command execution?&quot;</h2>

<p>XSS holes can allow Javascript insertion, which may allow for limited execution. If an attacker were to exploit a browser flaw (browser hole) it could then be possible to execute commands on the client's side. If command execution were possible it would only be possible on the client side. In simple terms XSS holes can be used to help exploit other holes that may exist in your browser.</p>


<h2>&quot;What if I don't feel like fixing a CSS/XSS Hole?&quot;</h2>

<p>By not fixing an XSS hole this could allow possible user account compromise in portions of your site as they get added or updated. Cross Site Scripting has been found in various large sites recently and have been widely publicized. Left unrepaired, someone may discover it and publish a warning about your company. This may damage your company's reputation, depicting it as being lax on security matters. This of course also sends the message to your clients that you aren't dealing with every problem that arises, which turns into a trust issue. If your client doesn't trust you why would they wish to do business with you?</p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /smallClass.asp?BigClassid=3'%22()%26%25&lt;acx&gt;&lt;ScRiPt%20&gt;hID3(9097)&lt;/ScRiPt&gt;&amp;smallClassid=7&amp;typeid=1 HTTP/1.1
Referer: http://zhaosheng.lyu.edu.cn
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA; Forcast2004%2D0089=sex=&amp;reglevel=&amp;fullname=&amp;UserLoginTimes=&amp;KEY=&amp;UserEmail=&amp;shenhe=&amp;passwd=&amp;purview=&amp;UserName=; ASPSESSIONIDQQRQBBQC=DGFMDJNCGOLLGKFNMLIPIDJK; ASPSESSIONIDSSRSCAQD=DECEDJNCBBDHMFKBIELAPLKG
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3130
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:51:28 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="79"><![CDATA[CWE-79]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[5.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix Cross Site Scripting Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/cross-site-scripting.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: How Cross-Site Scripting (XSS) Works]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-how-cross-site-scripting-xss-works/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[The Cross Site Scripting Faq]]></Database>
          <URL><![CDATA[http://www.cgisecurity.com/xss-faq.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Cross Site Scripting]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Cross_Site_Scripting]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Annihilation]]></Database>
          <URL><![CDATA[http://ha.ckers.org/blog/20060602/xss-annihilation/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Filter Evasion Cheat Sheet]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Cross site scripting]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Cross-site_scripting ]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How To: Prevent Cross-Site Scripting in ASP.NET]]></Database>
          <URL><![CDATA[http://msdn.microsoft.com/en-us/library/ms998274.aspx]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="9" color="red">
       <Name><![CDATA[Cross site scripting (verified)]]></Name>
       <ModuleName><![CDATA[Scripting (XSS.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">smallClassid</font></b> was set to <b><font color="dark">7'&quot;()&amp;%&lt;acx&gt;&lt;ScRiPt &gt;hID3(9457)&lt;/ScRiPt&gt;</font></b>]]></Details>
       <Affects><![CDATA[/smallClass.asp]]></Affects>
       <Parameter><![CDATA[smallClassid]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[Malicious users may inject JavaScript, VBScript, ActiveX, HTML or Flash into a vulnerable application to fool a user in order to gather data from them.
An attacker can steal the session cookie and take over the account, impersonating the user.
It is also possible to modify the content of the page presented to the user.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to Cross Site Scripting (XSS) attacks.<br/><br/>
Cross site scripting (also referred to as XSS) is a vulnerability that allows an attacker to send malicious code (usually in the form of Javascript) to another user.
Because a browser cannot know if the script should be trusted or not, it will execute the script in the user context allowing the attacker to access any cookies or session tokens retained by the browser.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from The Cross Site Scripting FAQ - http://www.cgisecurity.com/articles/xss-faq.shtml </i> 

<h2>Introduction</h2>

<p>Websites today are more complex than ever, containing a lot of dynamic content making the experience for the user more enjoyable. Dynamic content is achieved through the use of web applications which can deliver different output to a user depending on their settings and needs. Dynamic websites suffer from a threat that static websites don't, called &quot;Cross Site Scripting&quot; (or XSS dubbed by other security professionals). Currently small informational tidbits about Cross Site Scripting holes exist but none really explain them to an average person or administrator. This FAQ was written to provide a better understanding of this emerging threat, and to give guidance on detection and prevention.</p>

<h2>&quot;What is Cross Site Scripting?&quot;</h2>

<p>Cross site scripting (also known as XSS) occurs when a web application gathers malicious data from a user. The data is usually gathered in the form of a hyperlink which contains malicious content within it. The user will most likely click on this link from another website, instant message, or simply just reading a web board or email message. Usually the attacker will encode the malicious portion of the link to the site in HEX (or other encoding methods) so the request is less suspicious looking to the user when clicked on. After the data is collected by the web application, it creates an output page for the user containing the malicious data that was originally sent to it, but in a manner to make it appear as valid content from the website. Many popular guestbook and forum programs allow users to submit posts with html and javascript embedded in them. If for example I was logged in as &quot;john&quot; and read a message by &quot;joe&quot; that contained malicious javascript in it, then it may be possible for &quot;joe&quot; to hijack my session just by reading his bulletin board post. Further details on how attacks like this are accomplished via &quot;cookie theft&quot; are explained in detail below.</p>

<h2>&quot;What does XSS and CSS mean?&quot;</h2>

<p>Often people refer to Cross Site Scripting as CSS. There has been a lot of confusion with Cascading Style Sheets (CSS) and cross site scripting. Some security people refer to Cross Site Scripting as XSS. If you hear someone say &quot;I found a XSS hole&quot;, they are talking about Cross Site Scripting for certain.</p>


<h2>&quot;What are the threats of Cross Site Scripting?&quot;</h2>

<p>Often attackers will inject JavaScript, VBScript, ActiveX, HTML, or Flash into a vulnerable application to fool a user (Read below for further details) in order to gather data from them. Everything from account hijacking, changing of user settings, cookie theft/poisoning, or false advertising is possible. New malicious uses are being found every day for XSS attacks. The post below by Brett Moore brings up a good point with regard to &quot;Denial Of Service&quot;, and potential &quot;auto-attacking&quot; of hosts if a user simply reads a post on a message board.</p>

<h2>&quot;What can I do to protect myself as a vendor?&quot;</h2>

<p>This is a simple answer. Never trust user input and always filter metacharacters. This will eliminate the majority of XSS attacks. Converting &lt; and &gt; to &amp;lt; and &amp;gt; is also suggested when it comes to script output. Remember XSS holes can be damaging and costly to your business if abused. Often attackers will disclose these holes to the public, which can erode customer and public confidence in the security and privacy of your organization's site. Filtering &lt; and &gt; alone will not solve all cross site scripting attacks and it is suggested you also attempt to filter out ( and ) by translating them to &amp;#40; and &amp;#41;, and also # and &amp; by translating them to &amp;#35 (#) and &amp;#38 (&amp;).</p>

<h2>&quot;What can I do to protect myself as a user?&quot;</h2>

<p>The easiest way to protect yourself as a user is to only follow links from the main website you wish to view. If you visit one website and it links to CNN for example, instead of clicking on it visit CNN's main site and use its search engine to find the content. This will probably eliminate ninety percent of the problem. Sometimes XSS can be executed automatically when you open an email, email attachment, read a guestbook, or bulletin board post. If you plan on opening an email, or reading a post on a public board from a person you don't know BE CAREFUL. One of the best ways to protect yourself is to turn off Javascript in your browser settings. In IE turn your security settings to high. This can prevent cookie theft, and in general is a safer thing to do.</p>

<h2>&quot;How common are XSS holes?&quot;</h2>

<p>Cross site scripting holes are gaining popularity among hackers as easy holes to find in large websites. Websites from FBI.gov, CNN.com, Time.com, Ebay, Yahoo, Apple computer, Microsoft, Zdnet, Wired, and Newsbytes have all had one form or another of XSS bugs.</p>

<p>Every month roughly 10-25 XSS holes are found in commercial products and advisories are published explaining the threat.</p>


<h2>&quot;Does encryption protect me?&quot;</h2>

<p>Websites that use SSL (https) are in no way more protected than websites that are not encrypted. The web applications work the same way as before, except the attack is taking place in an encrypted connection. People often think that because they see the lock on their browser it means everything is secure. This just isn't the case.</p>


<h2>&quot;Can XSS holes allow command execution?&quot;</h2>

<p>XSS holes can allow Javascript insertion, which may allow for limited execution. If an attacker were to exploit a browser flaw (browser hole) it could then be possible to execute commands on the client's side. If command execution were possible it would only be possible on the client side. In simple terms XSS holes can be used to help exploit other holes that may exist in your browser.</p>


<h2>&quot;What if I don't feel like fixing a CSS/XSS Hole?&quot;</h2>

<p>By not fixing an XSS hole this could allow possible user account compromise in portions of your site as they get added or updated. Cross Site Scripting has been found in various large sites recently and have been widely publicized. Left unrepaired, someone may discover it and publish a warning about your company. This may damage your company's reputation, depicting it as being lax on security matters. This of course also sends the message to your clients that you aren't dealing with every problem that arises, which turns into a trust issue. If your client doesn't trust you why would they wish to do business with you?</p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /smallClass.asp?BigClassid=3&amp;smallClassid=7'%22()%26%25&lt;acx&gt;&lt;ScRiPt%20&gt;hID3(9457)&lt;/ScRiPt&gt;&amp;typeid=1 HTTP/1.1
Referer: http://zhaosheng.lyu.edu.cn
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA; Forcast2004%2D0089=sex=&amp;reglevel=&amp;fullname=&amp;UserLoginTimes=&amp;KEY=&amp;UserEmail=&amp;shenhe=&amp;passwd=&amp;purview=&amp;UserName=; ASPSESSIONIDQQRQBBQC=DGFMDJNCGOLLGKFNMLIPIDJK; ASPSESSIONIDSSRSCAQD=DECEDJNCBBDHMFKBIELAPLKG
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3130
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:51:29 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="79"><![CDATA[CWE-79]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[5.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix Cross Site Scripting Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/cross-site-scripting.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: How Cross-Site Scripting (XSS) Works]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-how-cross-site-scripting-xss-works/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[The Cross Site Scripting Faq]]></Database>
          <URL><![CDATA[http://www.cgisecurity.com/xss-faq.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Cross Site Scripting]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Cross_Site_Scripting]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Annihilation]]></Database>
          <URL><![CDATA[http://ha.ckers.org/blog/20060602/xss-annihilation/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Filter Evasion Cheat Sheet]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Cross site scripting]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Cross-site_scripting ]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How To: Prevent Cross-Site Scripting in ASP.NET]]></Database>
          <URL><![CDATA[http://msdn.microsoft.com/en-us/library/ms998274.aspx]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="10" color="red">
       <Name><![CDATA[Cross site scripting (verified)]]></Name>
       <ModuleName><![CDATA[Scripting (XSS.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">typeid</font></b> was set to <b><font color="dark">1'&quot;()&amp;%&lt;acx&gt;&lt;ScRiPt &gt;hID3(9311)&lt;/ScRiPt&gt;</font></b>]]></Details>
       <Affects><![CDATA[/smallClass.asp]]></Affects>
       <Parameter><![CDATA[typeid]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[Malicious users may inject JavaScript, VBScript, ActiveX, HTML or Flash into a vulnerable application to fool a user in order to gather data from them.
An attacker can steal the session cookie and take over the account, impersonating the user.
It is also possible to modify the content of the page presented to the user.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to Cross Site Scripting (XSS) attacks.<br/><br/>
Cross site scripting (also referred to as XSS) is a vulnerability that allows an attacker to send malicious code (usually in the form of Javascript) to another user.
Because a browser cannot know if the script should be trusted or not, it will execute the script in the user context allowing the attacker to access any cookies or session tokens retained by the browser.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from The Cross Site Scripting FAQ - http://www.cgisecurity.com/articles/xss-faq.shtml </i> 

<h2>Introduction</h2>

<p>Websites today are more complex than ever, containing a lot of dynamic content making the experience for the user more enjoyable. Dynamic content is achieved through the use of web applications which can deliver different output to a user depending on their settings and needs. Dynamic websites suffer from a threat that static websites don't, called &quot;Cross Site Scripting&quot; (or XSS dubbed by other security professionals). Currently small informational tidbits about Cross Site Scripting holes exist but none really explain them to an average person or administrator. This FAQ was written to provide a better understanding of this emerging threat, and to give guidance on detection and prevention.</p>

<h2>&quot;What is Cross Site Scripting?&quot;</h2>

<p>Cross site scripting (also known as XSS) occurs when a web application gathers malicious data from a user. The data is usually gathered in the form of a hyperlink which contains malicious content within it. The user will most likely click on this link from another website, instant message, or simply just reading a web board or email message. Usually the attacker will encode the malicious portion of the link to the site in HEX (or other encoding methods) so the request is less suspicious looking to the user when clicked on. After the data is collected by the web application, it creates an output page for the user containing the malicious data that was originally sent to it, but in a manner to make it appear as valid content from the website. Many popular guestbook and forum programs allow users to submit posts with html and javascript embedded in them. If for example I was logged in as &quot;john&quot; and read a message by &quot;joe&quot; that contained malicious javascript in it, then it may be possible for &quot;joe&quot; to hijack my session just by reading his bulletin board post. Further details on how attacks like this are accomplished via &quot;cookie theft&quot; are explained in detail below.</p>

<h2>&quot;What does XSS and CSS mean?&quot;</h2>

<p>Often people refer to Cross Site Scripting as CSS. There has been a lot of confusion with Cascading Style Sheets (CSS) and cross site scripting. Some security people refer to Cross Site Scripting as XSS. If you hear someone say &quot;I found a XSS hole&quot;, they are talking about Cross Site Scripting for certain.</p>


<h2>&quot;What are the threats of Cross Site Scripting?&quot;</h2>

<p>Often attackers will inject JavaScript, VBScript, ActiveX, HTML, or Flash into a vulnerable application to fool a user (Read below for further details) in order to gather data from them. Everything from account hijacking, changing of user settings, cookie theft/poisoning, or false advertising is possible. New malicious uses are being found every day for XSS attacks. The post below by Brett Moore brings up a good point with regard to &quot;Denial Of Service&quot;, and potential &quot;auto-attacking&quot; of hosts if a user simply reads a post on a message board.</p>

<h2>&quot;What can I do to protect myself as a vendor?&quot;</h2>

<p>This is a simple answer. Never trust user input and always filter metacharacters. This will eliminate the majority of XSS attacks. Converting &lt; and &gt; to &amp;lt; and &amp;gt; is also suggested when it comes to script output. Remember XSS holes can be damaging and costly to your business if abused. Often attackers will disclose these holes to the public, which can erode customer and public confidence in the security and privacy of your organization's site. Filtering &lt; and &gt; alone will not solve all cross site scripting attacks and it is suggested you also attempt to filter out ( and ) by translating them to &amp;#40; and &amp;#41;, and also # and &amp; by translating them to &amp;#35 (#) and &amp;#38 (&amp;).</p>

<h2>&quot;What can I do to protect myself as a user?&quot;</h2>

<p>The easiest way to protect yourself as a user is to only follow links from the main website you wish to view. If you visit one website and it links to CNN for example, instead of clicking on it visit CNN's main site and use its search engine to find the content. This will probably eliminate ninety percent of the problem. Sometimes XSS can be executed automatically when you open an email, email attachment, read a guestbook, or bulletin board post. If you plan on opening an email, or reading a post on a public board from a person you don't know BE CAREFUL. One of the best ways to protect yourself is to turn off Javascript in your browser settings. In IE turn your security settings to high. This can prevent cookie theft, and in general is a safer thing to do.</p>

<h2>&quot;How common are XSS holes?&quot;</h2>

<p>Cross site scripting holes are gaining popularity among hackers as easy holes to find in large websites. Websites from FBI.gov, CNN.com, Time.com, Ebay, Yahoo, Apple computer, Microsoft, Zdnet, Wired, and Newsbytes have all had one form or another of XSS bugs.</p>

<p>Every month roughly 10-25 XSS holes are found in commercial products and advisories are published explaining the threat.</p>


<h2>&quot;Does encryption protect me?&quot;</h2>

<p>Websites that use SSL (https) are in no way more protected than websites that are not encrypted. The web applications work the same way as before, except the attack is taking place in an encrypted connection. People often think that because they see the lock on their browser it means everything is secure. This just isn't the case.</p>


<h2>&quot;Can XSS holes allow command execution?&quot;</h2>

<p>XSS holes can allow Javascript insertion, which may allow for limited execution. If an attacker were to exploit a browser flaw (browser hole) it could then be possible to execute commands on the client's side. If command execution were possible it would only be possible on the client side. In simple terms XSS holes can be used to help exploit other holes that may exist in your browser.</p>


<h2>&quot;What if I don't feel like fixing a CSS/XSS Hole?&quot;</h2>

<p>By not fixing an XSS hole this could allow possible user account compromise in portions of your site as they get added or updated. Cross Site Scripting has been found in various large sites recently and have been widely publicized. Left unrepaired, someone may discover it and publish a warning about your company. This may damage your company's reputation, depicting it as being lax on security matters. This of course also sends the message to your clients that you aren't dealing with every problem that arises, which turns into a trust issue. If your client doesn't trust you why would they wish to do business with you?</p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /smallClass.asp?BigClassid=3&amp;smallClassid=7&amp;typeid=1'%22()%26%25&lt;acx&gt;&lt;ScRiPt%20&gt;hID3(9311)&lt;/ScRiPt&gt; HTTP/1.1
Referer: http://zhaosheng.lyu.edu.cn
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA; Forcast2004%2D0089=sex=&amp;reglevel=&amp;fullname=&amp;UserLoginTimes=&amp;KEY=&amp;UserEmail=&amp;shenhe=&amp;passwd=&amp;purview=&amp;UserName=; ASPSESSIONIDQQRQBBQC=DGFMDJNCGOLLGKFNMLIPIDJK; ASPSESSIONIDSSRSCAQD=DECEDJNCBBDHMFKBIELAPLKG
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3130
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:51:30 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="79"><![CDATA[CWE-79]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[5.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix Cross Site Scripting Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/cross-site-scripting.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: How Cross-Site Scripting (XSS) Works]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-how-cross-site-scripting-xss-works/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[The Cross Site Scripting Faq]]></Database>
          <URL><![CDATA[http://www.cgisecurity.com/xss-faq.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Cross Site Scripting]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Cross_Site_Scripting]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Annihilation]]></Database>
          <URL><![CDATA[http://ha.ckers.org/blog/20060602/xss-annihilation/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Filter Evasion Cheat Sheet]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Cross site scripting]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Cross-site_scripting ]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How To: Prevent Cross-Site Scripting in ASP.NET]]></Database>
          <URL><![CDATA[http://msdn.microsoft.com/en-us/library/ms998274.aspx]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="11" color="red">
       <Name><![CDATA[Cross site scripting (verified)]]></Name>
       <ModuleName><![CDATA[Scripting (XSS.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">BigClassid</font></b> was set to <b><font color="dark">1'&quot;()&amp;%&lt;acx&gt;&lt;ScRiPt &gt;N0fX(9346)&lt;/ScRiPt&gt;</font></b>]]></Details>
       <Affects><![CDATA[/BigClass.asp]]></Affects>
       <Parameter><![CDATA[BigClassid]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[Malicious users may inject JavaScript, VBScript, ActiveX, HTML or Flash into a vulnerable application to fool a user in order to gather data from them.
An attacker can steal the session cookie and take over the account, impersonating the user.
It is also possible to modify the content of the page presented to the user.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to Cross Site Scripting (XSS) attacks.<br/><br/>
Cross site scripting (also referred to as XSS) is a vulnerability that allows an attacker to send malicious code (usually in the form of Javascript) to another user.
Because a browser cannot know if the script should be trusted or not, it will execute the script in the user context allowing the attacker to access any cookies or session tokens retained by the browser.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from The Cross Site Scripting FAQ - http://www.cgisecurity.com/articles/xss-faq.shtml </i> 

<h2>Introduction</h2>

<p>Websites today are more complex than ever, containing a lot of dynamic content making the experience for the user more enjoyable. Dynamic content is achieved through the use of web applications which can deliver different output to a user depending on their settings and needs. Dynamic websites suffer from a threat that static websites don't, called &quot;Cross Site Scripting&quot; (or XSS dubbed by other security professionals). Currently small informational tidbits about Cross Site Scripting holes exist but none really explain them to an average person or administrator. This FAQ was written to provide a better understanding of this emerging threat, and to give guidance on detection and prevention.</p>

<h2>&quot;What is Cross Site Scripting?&quot;</h2>

<p>Cross site scripting (also known as XSS) occurs when a web application gathers malicious data from a user. The data is usually gathered in the form of a hyperlink which contains malicious content within it. The user will most likely click on this link from another website, instant message, or simply just reading a web board or email message. Usually the attacker will encode the malicious portion of the link to the site in HEX (or other encoding methods) so the request is less suspicious looking to the user when clicked on. After the data is collected by the web application, it creates an output page for the user containing the malicious data that was originally sent to it, but in a manner to make it appear as valid content from the website. Many popular guestbook and forum programs allow users to submit posts with html and javascript embedded in them. If for example I was logged in as &quot;john&quot; and read a message by &quot;joe&quot; that contained malicious javascript in it, then it may be possible for &quot;joe&quot; to hijack my session just by reading his bulletin board post. Further details on how attacks like this are accomplished via &quot;cookie theft&quot; are explained in detail below.</p>

<h2>&quot;What does XSS and CSS mean?&quot;</h2>

<p>Often people refer to Cross Site Scripting as CSS. There has been a lot of confusion with Cascading Style Sheets (CSS) and cross site scripting. Some security people refer to Cross Site Scripting as XSS. If you hear someone say &quot;I found a XSS hole&quot;, they are talking about Cross Site Scripting for certain.</p>


<h2>&quot;What are the threats of Cross Site Scripting?&quot;</h2>

<p>Often attackers will inject JavaScript, VBScript, ActiveX, HTML, or Flash into a vulnerable application to fool a user (Read below for further details) in order to gather data from them. Everything from account hijacking, changing of user settings, cookie theft/poisoning, or false advertising is possible. New malicious uses are being found every day for XSS attacks. The post below by Brett Moore brings up a good point with regard to &quot;Denial Of Service&quot;, and potential &quot;auto-attacking&quot; of hosts if a user simply reads a post on a message board.</p>

<h2>&quot;What can I do to protect myself as a vendor?&quot;</h2>

<p>This is a simple answer. Never trust user input and always filter metacharacters. This will eliminate the majority of XSS attacks. Converting &lt; and &gt; to &amp;lt; and &amp;gt; is also suggested when it comes to script output. Remember XSS holes can be damaging and costly to your business if abused. Often attackers will disclose these holes to the public, which can erode customer and public confidence in the security and privacy of your organization's site. Filtering &lt; and &gt; alone will not solve all cross site scripting attacks and it is suggested you also attempt to filter out ( and ) by translating them to &amp;#40; and &amp;#41;, and also # and &amp; by translating them to &amp;#35 (#) and &amp;#38 (&amp;).</p>

<h2>&quot;What can I do to protect myself as a user?&quot;</h2>

<p>The easiest way to protect yourself as a user is to only follow links from the main website you wish to view. If you visit one website and it links to CNN for example, instead of clicking on it visit CNN's main site and use its search engine to find the content. This will probably eliminate ninety percent of the problem. Sometimes XSS can be executed automatically when you open an email, email attachment, read a guestbook, or bulletin board post. If you plan on opening an email, or reading a post on a public board from a person you don't know BE CAREFUL. One of the best ways to protect yourself is to turn off Javascript in your browser settings. In IE turn your security settings to high. This can prevent cookie theft, and in general is a safer thing to do.</p>

<h2>&quot;How common are XSS holes?&quot;</h2>

<p>Cross site scripting holes are gaining popularity among hackers as easy holes to find in large websites. Websites from FBI.gov, CNN.com, Time.com, Ebay, Yahoo, Apple computer, Microsoft, Zdnet, Wired, and Newsbytes have all had one form or another of XSS bugs.</p>

<p>Every month roughly 10-25 XSS holes are found in commercial products and advisories are published explaining the threat.</p>


<h2>&quot;Does encryption protect me?&quot;</h2>

<p>Websites that use SSL (https) are in no way more protected than websites that are not encrypted. The web applications work the same way as before, except the attack is taking place in an encrypted connection. People often think that because they see the lock on their browser it means everything is secure. This just isn't the case.</p>


<h2>&quot;Can XSS holes allow command execution?&quot;</h2>

<p>XSS holes can allow Javascript insertion, which may allow for limited execution. If an attacker were to exploit a browser flaw (browser hole) it could then be possible to execute commands on the client's side. If command execution were possible it would only be possible on the client side. In simple terms XSS holes can be used to help exploit other holes that may exist in your browser.</p>


<h2>&quot;What if I don't feel like fixing a CSS/XSS Hole?&quot;</h2>

<p>By not fixing an XSS hole this could allow possible user account compromise in portions of your site as they get added or updated. Cross Site Scripting has been found in various large sites recently and have been widely publicized. Left unrepaired, someone may discover it and publish a warning about your company. This may damage your company's reputation, depicting it as being lax on security matters. This of course also sends the message to your clients that you aren't dealing with every problem that arises, which turns into a trust issue. If your client doesn't trust you why would they wish to do business with you?</p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /BigClass.asp?BigClassid=1'%22()%26%25&lt;acx&gt;&lt;ScRiPt%20&gt;N0fX(9346)&lt;/ScRiPt&gt;&amp;TypeId=1 HTTP/1.1
Referer: http://zhaosheng.lyu.edu.cn
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA; Forcast2004%2D0089=sex=&amp;reglevel=&amp;fullname=&amp;UserLoginTimes=&amp;KEY=&amp;UserEmail=&amp;shenhe=&amp;passwd=&amp;purview=&amp;UserName=; ASPSESSIONIDQQRQBBQC=DGFMDJNCGOLLGKFNMLIPIDJK; ASPSESSIONIDSSRSCAQD=DECEDJNCBBDHMFKBIELAPLKG
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3130
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:51:34 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="79"><![CDATA[CWE-79]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[5.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix Cross Site Scripting Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/cross-site-scripting.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: How Cross-Site Scripting (XSS) Works]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-how-cross-site-scripting-xss-works/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[The Cross Site Scripting Faq]]></Database>
          <URL><![CDATA[http://www.cgisecurity.com/xss-faq.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Cross Site Scripting]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Cross_Site_Scripting]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Annihilation]]></Database>
          <URL><![CDATA[http://ha.ckers.org/blog/20060602/xss-annihilation/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Filter Evasion Cheat Sheet]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Cross site scripting]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Cross-site_scripting ]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How To: Prevent Cross-Site Scripting in ASP.NET]]></Database>
          <URL><![CDATA[http://msdn.microsoft.com/en-us/library/ms998274.aspx]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="12" color="red">
       <Name><![CDATA[Cross site scripting (verified)]]></Name>
       <ModuleName><![CDATA[Scripting (XSS.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">TypeId</font></b> was set to <b><font color="dark">1'&quot;()&amp;%&lt;acx&gt;&lt;ScRiPt &gt;N0fX(9933)&lt;/ScRiPt&gt;</font></b>]]></Details>
       <Affects><![CDATA[/BigClass.asp]]></Affects>
       <Parameter><![CDATA[TypeId]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[Malicious users may inject JavaScript, VBScript, ActiveX, HTML or Flash into a vulnerable application to fool a user in order to gather data from them.
An attacker can steal the session cookie and take over the account, impersonating the user.
It is also possible to modify the content of the page presented to the user.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to Cross Site Scripting (XSS) attacks.<br/><br/>
Cross site scripting (also referred to as XSS) is a vulnerability that allows an attacker to send malicious code (usually in the form of Javascript) to another user.
Because a browser cannot know if the script should be trusted or not, it will execute the script in the user context allowing the attacker to access any cookies or session tokens retained by the browser.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from The Cross Site Scripting FAQ - http://www.cgisecurity.com/articles/xss-faq.shtml </i> 

<h2>Introduction</h2>

<p>Websites today are more complex than ever, containing a lot of dynamic content making the experience for the user more enjoyable. Dynamic content is achieved through the use of web applications which can deliver different output to a user depending on their settings and needs. Dynamic websites suffer from a threat that static websites don't, called &quot;Cross Site Scripting&quot; (or XSS dubbed by other security professionals). Currently small informational tidbits about Cross Site Scripting holes exist but none really explain them to an average person or administrator. This FAQ was written to provide a better understanding of this emerging threat, and to give guidance on detection and prevention.</p>

<h2>&quot;What is Cross Site Scripting?&quot;</h2>

<p>Cross site scripting (also known as XSS) occurs when a web application gathers malicious data from a user. The data is usually gathered in the form of a hyperlink which contains malicious content within it. The user will most likely click on this link from another website, instant message, or simply just reading a web board or email message. Usually the attacker will encode the malicious portion of the link to the site in HEX (or other encoding methods) so the request is less suspicious looking to the user when clicked on. After the data is collected by the web application, it creates an output page for the user containing the malicious data that was originally sent to it, but in a manner to make it appear as valid content from the website. Many popular guestbook and forum programs allow users to submit posts with html and javascript embedded in them. If for example I was logged in as &quot;john&quot; and read a message by &quot;joe&quot; that contained malicious javascript in it, then it may be possible for &quot;joe&quot; to hijack my session just by reading his bulletin board post. Further details on how attacks like this are accomplished via &quot;cookie theft&quot; are explained in detail below.</p>

<h2>&quot;What does XSS and CSS mean?&quot;</h2>

<p>Often people refer to Cross Site Scripting as CSS. There has been a lot of confusion with Cascading Style Sheets (CSS) and cross site scripting. Some security people refer to Cross Site Scripting as XSS. If you hear someone say &quot;I found a XSS hole&quot;, they are talking about Cross Site Scripting for certain.</p>


<h2>&quot;What are the threats of Cross Site Scripting?&quot;</h2>

<p>Often attackers will inject JavaScript, VBScript, ActiveX, HTML, or Flash into a vulnerable application to fool a user (Read below for further details) in order to gather data from them. Everything from account hijacking, changing of user settings, cookie theft/poisoning, or false advertising is possible. New malicious uses are being found every day for XSS attacks. The post below by Brett Moore brings up a good point with regard to &quot;Denial Of Service&quot;, and potential &quot;auto-attacking&quot; of hosts if a user simply reads a post on a message board.</p>

<h2>&quot;What can I do to protect myself as a vendor?&quot;</h2>

<p>This is a simple answer. Never trust user input and always filter metacharacters. This will eliminate the majority of XSS attacks. Converting &lt; and &gt; to &amp;lt; and &amp;gt; is also suggested when it comes to script output. Remember XSS holes can be damaging and costly to your business if abused. Often attackers will disclose these holes to the public, which can erode customer and public confidence in the security and privacy of your organization's site. Filtering &lt; and &gt; alone will not solve all cross site scripting attacks and it is suggested you also attempt to filter out ( and ) by translating them to &amp;#40; and &amp;#41;, and also # and &amp; by translating them to &amp;#35 (#) and &amp;#38 (&amp;).</p>

<h2>&quot;What can I do to protect myself as a user?&quot;</h2>

<p>The easiest way to protect yourself as a user is to only follow links from the main website you wish to view. If you visit one website and it links to CNN for example, instead of clicking on it visit CNN's main site and use its search engine to find the content. This will probably eliminate ninety percent of the problem. Sometimes XSS can be executed automatically when you open an email, email attachment, read a guestbook, or bulletin board post. If you plan on opening an email, or reading a post on a public board from a person you don't know BE CAREFUL. One of the best ways to protect yourself is to turn off Javascript in your browser settings. In IE turn your security settings to high. This can prevent cookie theft, and in general is a safer thing to do.</p>

<h2>&quot;How common are XSS holes?&quot;</h2>

<p>Cross site scripting holes are gaining popularity among hackers as easy holes to find in large websites. Websites from FBI.gov, CNN.com, Time.com, Ebay, Yahoo, Apple computer, Microsoft, Zdnet, Wired, and Newsbytes have all had one form or another of XSS bugs.</p>

<p>Every month roughly 10-25 XSS holes are found in commercial products and advisories are published explaining the threat.</p>


<h2>&quot;Does encryption protect me?&quot;</h2>

<p>Websites that use SSL (https) are in no way more protected than websites that are not encrypted. The web applications work the same way as before, except the attack is taking place in an encrypted connection. People often think that because they see the lock on their browser it means everything is secure. This just isn't the case.</p>


<h2>&quot;Can XSS holes allow command execution?&quot;</h2>

<p>XSS holes can allow Javascript insertion, which may allow for limited execution. If an attacker were to exploit a browser flaw (browser hole) it could then be possible to execute commands on the client's side. If command execution were possible it would only be possible on the client side. In simple terms XSS holes can be used to help exploit other holes that may exist in your browser.</p>


<h2>&quot;What if I don't feel like fixing a CSS/XSS Hole?&quot;</h2>

<p>By not fixing an XSS hole this could allow possible user account compromise in portions of your site as they get added or updated. Cross Site Scripting has been found in various large sites recently and have been widely publicized. Left unrepaired, someone may discover it and publish a warning about your company. This may damage your company's reputation, depicting it as being lax on security matters. This of course also sends the message to your clients that you aren't dealing with every problem that arises, which turns into a trust issue. If your client doesn't trust you why would they wish to do business with you?</p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /BigClass.asp?BigClassid=1&amp;TypeId=1'%22()%26%25&lt;acx&gt;&lt;ScRiPt%20&gt;N0fX(9933)&lt;/ScRiPt&gt; HTTP/1.1
Referer: http://zhaosheng.lyu.edu.cn
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA; Forcast2004%2D0089=sex=&amp;reglevel=&amp;fullname=&amp;UserLoginTimes=&amp;KEY=&amp;UserEmail=&amp;shenhe=&amp;passwd=&amp;purview=&amp;UserName=; ASPSESSIONIDQQRQBBQC=DGFMDJNCGOLLGKFNMLIPIDJK; ASPSESSIONIDSSRSCAQD=DECEDJNCBBDHMFKBIELAPLKG
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3130
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:51:35 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="79"><![CDATA[CWE-79]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[5.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix Cross Site Scripting Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/cross-site-scripting.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: How Cross-Site Scripting (XSS) Works]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-how-cross-site-scripting-xss-works/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[The Cross Site Scripting Faq]]></Database>
          <URL><![CDATA[http://www.cgisecurity.com/xss-faq.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Cross Site Scripting]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Cross_Site_Scripting]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Annihilation]]></Database>
          <URL><![CDATA[http://ha.ckers.org/blog/20060602/xss-annihilation/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Filter Evasion Cheat Sheet]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Cross site scripting]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Cross-site_scripting ]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How To: Prevent Cross-Site Scripting in ASP.NET]]></Database>
          <URL><![CDATA[http://msdn.microsoft.com/en-us/library/ms998274.aspx]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="13" color="red">
       <Name><![CDATA[Cross site scripting (verified)]]></Name>
       <ModuleName><![CDATA[Scripting (XSS.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">BigClassID</font></b> was set to <b><font color="dark">16'&quot;()&amp;%&lt;acx&gt;&lt;ScRiPt &gt;0alr(9692)&lt;/ScRiPt&gt;</font></b>]]></Details>
       <Affects><![CDATA[/SmallClass.asp]]></Affects>
       <Parameter><![CDATA[BigClassID]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[Malicious users may inject JavaScript, VBScript, ActiveX, HTML or Flash into a vulnerable application to fool a user in order to gather data from them.
An attacker can steal the session cookie and take over the account, impersonating the user.
It is also possible to modify the content of the page presented to the user.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to Cross Site Scripting (XSS) attacks.<br/><br/>
Cross site scripting (also referred to as XSS) is a vulnerability that allows an attacker to send malicious code (usually in the form of Javascript) to another user.
Because a browser cannot know if the script should be trusted or not, it will execute the script in the user context allowing the attacker to access any cookies or session tokens retained by the browser.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from The Cross Site Scripting FAQ - http://www.cgisecurity.com/articles/xss-faq.shtml </i> 

<h2>Introduction</h2>

<p>Websites today are more complex than ever, containing a lot of dynamic content making the experience for the user more enjoyable. Dynamic content is achieved through the use of web applications which can deliver different output to a user depending on their settings and needs. Dynamic websites suffer from a threat that static websites don't, called &quot;Cross Site Scripting&quot; (or XSS dubbed by other security professionals). Currently small informational tidbits about Cross Site Scripting holes exist but none really explain them to an average person or administrator. This FAQ was written to provide a better understanding of this emerging threat, and to give guidance on detection and prevention.</p>

<h2>&quot;What is Cross Site Scripting?&quot;</h2>

<p>Cross site scripting (also known as XSS) occurs when a web application gathers malicious data from a user. The data is usually gathered in the form of a hyperlink which contains malicious content within it. The user will most likely click on this link from another website, instant message, or simply just reading a web board or email message. Usually the attacker will encode the malicious portion of the link to the site in HEX (or other encoding methods) so the request is less suspicious looking to the user when clicked on. After the data is collected by the web application, it creates an output page for the user containing the malicious data that was originally sent to it, but in a manner to make it appear as valid content from the website. Many popular guestbook and forum programs allow users to submit posts with html and javascript embedded in them. If for example I was logged in as &quot;john&quot; and read a message by &quot;joe&quot; that contained malicious javascript in it, then it may be possible for &quot;joe&quot; to hijack my session just by reading his bulletin board post. Further details on how attacks like this are accomplished via &quot;cookie theft&quot; are explained in detail below.</p>

<h2>&quot;What does XSS and CSS mean?&quot;</h2>

<p>Often people refer to Cross Site Scripting as CSS. There has been a lot of confusion with Cascading Style Sheets (CSS) and cross site scripting. Some security people refer to Cross Site Scripting as XSS. If you hear someone say &quot;I found a XSS hole&quot;, they are talking about Cross Site Scripting for certain.</p>


<h2>&quot;What are the threats of Cross Site Scripting?&quot;</h2>

<p>Often attackers will inject JavaScript, VBScript, ActiveX, HTML, or Flash into a vulnerable application to fool a user (Read below for further details) in order to gather data from them. Everything from account hijacking, changing of user settings, cookie theft/poisoning, or false advertising is possible. New malicious uses are being found every day for XSS attacks. The post below by Brett Moore brings up a good point with regard to &quot;Denial Of Service&quot;, and potential &quot;auto-attacking&quot; of hosts if a user simply reads a post on a message board.</p>

<h2>&quot;What can I do to protect myself as a vendor?&quot;</h2>

<p>This is a simple answer. Never trust user input and always filter metacharacters. This will eliminate the majority of XSS attacks. Converting &lt; and &gt; to &amp;lt; and &amp;gt; is also suggested when it comes to script output. Remember XSS holes can be damaging and costly to your business if abused. Often attackers will disclose these holes to the public, which can erode customer and public confidence in the security and privacy of your organization's site. Filtering &lt; and &gt; alone will not solve all cross site scripting attacks and it is suggested you also attempt to filter out ( and ) by translating them to &amp;#40; and &amp;#41;, and also # and &amp; by translating them to &amp;#35 (#) and &amp;#38 (&amp;).</p>

<h2>&quot;What can I do to protect myself as a user?&quot;</h2>

<p>The easiest way to protect yourself as a user is to only follow links from the main website you wish to view. If you visit one website and it links to CNN for example, instead of clicking on it visit CNN's main site and use its search engine to find the content. This will probably eliminate ninety percent of the problem. Sometimes XSS can be executed automatically when you open an email, email attachment, read a guestbook, or bulletin board post. If you plan on opening an email, or reading a post on a public board from a person you don't know BE CAREFUL. One of the best ways to protect yourself is to turn off Javascript in your browser settings. In IE turn your security settings to high. This can prevent cookie theft, and in general is a safer thing to do.</p>

<h2>&quot;How common are XSS holes?&quot;</h2>

<p>Cross site scripting holes are gaining popularity among hackers as easy holes to find in large websites. Websites from FBI.gov, CNN.com, Time.com, Ebay, Yahoo, Apple computer, Microsoft, Zdnet, Wired, and Newsbytes have all had one form or another of XSS bugs.</p>

<p>Every month roughly 10-25 XSS holes are found in commercial products and advisories are published explaining the threat.</p>


<h2>&quot;Does encryption protect me?&quot;</h2>

<p>Websites that use SSL (https) are in no way more protected than websites that are not encrypted. The web applications work the same way as before, except the attack is taking place in an encrypted connection. People often think that because they see the lock on their browser it means everything is secure. This just isn't the case.</p>


<h2>&quot;Can XSS holes allow command execution?&quot;</h2>

<p>XSS holes can allow Javascript insertion, which may allow for limited execution. If an attacker were to exploit a browser flaw (browser hole) it could then be possible to execute commands on the client's side. If command execution were possible it would only be possible on the client side. In simple terms XSS holes can be used to help exploit other holes that may exist in your browser.</p>


<h2>&quot;What if I don't feel like fixing a CSS/XSS Hole?&quot;</h2>

<p>By not fixing an XSS hole this could allow possible user account compromise in portions of your site as they get added or updated. Cross Site Scripting has been found in various large sites recently and have been widely publicized. Left unrepaired, someone may discover it and publish a warning about your company. This may damage your company's reputation, depicting it as being lax on security matters. This of course also sends the message to your clients that you aren't dealing with every problem that arises, which turns into a trust issue. If your client doesn't trust you why would they wish to do business with you?</p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /SmallClass.asp?BigClassID=16'%22()%26%25&lt;acx&gt;&lt;ScRiPt%20&gt;0alr(9692)&lt;/ScRiPt&gt;&amp;SmallClassID=39&amp;typeid=1 HTTP/1.1
Referer: http://zhaosheng.lyu.edu.cn
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA; Forcast2004%2D0089=sex=&amp;reglevel=&amp;fullname=&amp;UserLoginTimes=&amp;KEY=&amp;UserEmail=&amp;shenhe=&amp;passwd=&amp;purview=&amp;UserName=; ASPSESSIONIDQQRQBBQC=DGFMDJNCGOLLGKFNMLIPIDJK; ASPSESSIONIDSSRSCAQD=DECEDJNCBBDHMFKBIELAPLKG
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3131
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:51:43 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="79"><![CDATA[CWE-79]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[5.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix Cross Site Scripting Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/cross-site-scripting.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: How Cross-Site Scripting (XSS) Works]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-how-cross-site-scripting-xss-works/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[The Cross Site Scripting Faq]]></Database>
          <URL><![CDATA[http://www.cgisecurity.com/xss-faq.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Cross Site Scripting]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Cross_Site_Scripting]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Annihilation]]></Database>
          <URL><![CDATA[http://ha.ckers.org/blog/20060602/xss-annihilation/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Filter Evasion Cheat Sheet]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Cross site scripting]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Cross-site_scripting ]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How To: Prevent Cross-Site Scripting in ASP.NET]]></Database>
          <URL><![CDATA[http://msdn.microsoft.com/en-us/library/ms998274.aspx]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="14" color="red">
       <Name><![CDATA[Cross site scripting (verified)]]></Name>
       <ModuleName><![CDATA[Scripting (XSS.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">SmallClassID</font></b> was set to <b><font color="dark">32'&quot;()&amp;%&lt;acx&gt;&lt;ScRiPt &gt;0alr(9367)&lt;/ScRiPt&gt;</font></b>]]></Details>
       <Affects><![CDATA[/SmallClass.asp]]></Affects>
       <Parameter><![CDATA[SmallClassID]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[Malicious users may inject JavaScript, VBScript, ActiveX, HTML or Flash into a vulnerable application to fool a user in order to gather data from them.
An attacker can steal the session cookie and take over the account, impersonating the user.
It is also possible to modify the content of the page presented to the user.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to Cross Site Scripting (XSS) attacks.<br/><br/>
Cross site scripting (also referred to as XSS) is a vulnerability that allows an attacker to send malicious code (usually in the form of Javascript) to another user.
Because a browser cannot know if the script should be trusted or not, it will execute the script in the user context allowing the attacker to access any cookies or session tokens retained by the browser.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from The Cross Site Scripting FAQ - http://www.cgisecurity.com/articles/xss-faq.shtml </i> 

<h2>Introduction</h2>

<p>Websites today are more complex than ever, containing a lot of dynamic content making the experience for the user more enjoyable. Dynamic content is achieved through the use of web applications which can deliver different output to a user depending on their settings and needs. Dynamic websites suffer from a threat that static websites don't, called &quot;Cross Site Scripting&quot; (or XSS dubbed by other security professionals). Currently small informational tidbits about Cross Site Scripting holes exist but none really explain them to an average person or administrator. This FAQ was written to provide a better understanding of this emerging threat, and to give guidance on detection and prevention.</p>

<h2>&quot;What is Cross Site Scripting?&quot;</h2>

<p>Cross site scripting (also known as XSS) occurs when a web application gathers malicious data from a user. The data is usually gathered in the form of a hyperlink which contains malicious content within it. The user will most likely click on this link from another website, instant message, or simply just reading a web board or email message. Usually the attacker will encode the malicious portion of the link to the site in HEX (or other encoding methods) so the request is less suspicious looking to the user when clicked on. After the data is collected by the web application, it creates an output page for the user containing the malicious data that was originally sent to it, but in a manner to make it appear as valid content from the website. Many popular guestbook and forum programs allow users to submit posts with html and javascript embedded in them. If for example I was logged in as &quot;john&quot; and read a message by &quot;joe&quot; that contained malicious javascript in it, then it may be possible for &quot;joe&quot; to hijack my session just by reading his bulletin board post. Further details on how attacks like this are accomplished via &quot;cookie theft&quot; are explained in detail below.</p>

<h2>&quot;What does XSS and CSS mean?&quot;</h2>

<p>Often people refer to Cross Site Scripting as CSS. There has been a lot of confusion with Cascading Style Sheets (CSS) and cross site scripting. Some security people refer to Cross Site Scripting as XSS. If you hear someone say &quot;I found a XSS hole&quot;, they are talking about Cross Site Scripting for certain.</p>


<h2>&quot;What are the threats of Cross Site Scripting?&quot;</h2>

<p>Often attackers will inject JavaScript, VBScript, ActiveX, HTML, or Flash into a vulnerable application to fool a user (Read below for further details) in order to gather data from them. Everything from account hijacking, changing of user settings, cookie theft/poisoning, or false advertising is possible. New malicious uses are being found every day for XSS attacks. The post below by Brett Moore brings up a good point with regard to &quot;Denial Of Service&quot;, and potential &quot;auto-attacking&quot; of hosts if a user simply reads a post on a message board.</p>

<h2>&quot;What can I do to protect myself as a vendor?&quot;</h2>

<p>This is a simple answer. Never trust user input and always filter metacharacters. This will eliminate the majority of XSS attacks. Converting &lt; and &gt; to &amp;lt; and &amp;gt; is also suggested when it comes to script output. Remember XSS holes can be damaging and costly to your business if abused. Often attackers will disclose these holes to the public, which can erode customer and public confidence in the security and privacy of your organization's site. Filtering &lt; and &gt; alone will not solve all cross site scripting attacks and it is suggested you also attempt to filter out ( and ) by translating them to &amp;#40; and &amp;#41;, and also # and &amp; by translating them to &amp;#35 (#) and &amp;#38 (&amp;).</p>

<h2>&quot;What can I do to protect myself as a user?&quot;</h2>

<p>The easiest way to protect yourself as a user is to only follow links from the main website you wish to view. If you visit one website and it links to CNN for example, instead of clicking on it visit CNN's main site and use its search engine to find the content. This will probably eliminate ninety percent of the problem. Sometimes XSS can be executed automatically when you open an email, email attachment, read a guestbook, or bulletin board post. If you plan on opening an email, or reading a post on a public board from a person you don't know BE CAREFUL. One of the best ways to protect yourself is to turn off Javascript in your browser settings. In IE turn your security settings to high. This can prevent cookie theft, and in general is a safer thing to do.</p>

<h2>&quot;How common are XSS holes?&quot;</h2>

<p>Cross site scripting holes are gaining popularity among hackers as easy holes to find in large websites. Websites from FBI.gov, CNN.com, Time.com, Ebay, Yahoo, Apple computer, Microsoft, Zdnet, Wired, and Newsbytes have all had one form or another of XSS bugs.</p>

<p>Every month roughly 10-25 XSS holes are found in commercial products and advisories are published explaining the threat.</p>


<h2>&quot;Does encryption protect me?&quot;</h2>

<p>Websites that use SSL (https) are in no way more protected than websites that are not encrypted. The web applications work the same way as before, except the attack is taking place in an encrypted connection. People often think that because they see the lock on their browser it means everything is secure. This just isn't the case.</p>


<h2>&quot;Can XSS holes allow command execution?&quot;</h2>

<p>XSS holes can allow Javascript insertion, which may allow for limited execution. If an attacker were to exploit a browser flaw (browser hole) it could then be possible to execute commands on the client's side. If command execution were possible it would only be possible on the client side. In simple terms XSS holes can be used to help exploit other holes that may exist in your browser.</p>


<h2>&quot;What if I don't feel like fixing a CSS/XSS Hole?&quot;</h2>

<p>By not fixing an XSS hole this could allow possible user account compromise in portions of your site as they get added or updated. Cross Site Scripting has been found in various large sites recently and have been widely publicized. Left unrepaired, someone may discover it and publish a warning about your company. This may damage your company's reputation, depicting it as being lax on security matters. This of course also sends the message to your clients that you aren't dealing with every problem that arises, which turns into a trust issue. If your client doesn't trust you why would they wish to do business with you?</p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /SmallClass.asp?BigClassID=16&amp;SmallClassID=32'%22()%26%25&lt;acx&gt;&lt;ScRiPt%20&gt;0alr(9367)&lt;/ScRiPt&gt;&amp;typeid=1 HTTP/1.1
Referer: http://zhaosheng.lyu.edu.cn
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA; Forcast2004%2D0089=sex=&amp;reglevel=&amp;fullname=&amp;UserLoginTimes=&amp;KEY=&amp;UserEmail=&amp;shenhe=&amp;passwd=&amp;purview=&amp;UserName=; ASPSESSIONIDQQRQBBQC=DGFMDJNCGOLLGKFNMLIPIDJK; ASPSESSIONIDSSRSCAQD=DECEDJNCBBDHMFKBIELAPLKG
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3131
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:51:44 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="79"><![CDATA[CWE-79]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[5.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix Cross Site Scripting Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/cross-site-scripting.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: How Cross-Site Scripting (XSS) Works]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-how-cross-site-scripting-xss-works/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[The Cross Site Scripting Faq]]></Database>
          <URL><![CDATA[http://www.cgisecurity.com/xss-faq.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Cross Site Scripting]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Cross_Site_Scripting]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Annihilation]]></Database>
          <URL><![CDATA[http://ha.ckers.org/blog/20060602/xss-annihilation/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Filter Evasion Cheat Sheet]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Cross site scripting]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Cross-site_scripting ]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How To: Prevent Cross-Site Scripting in ASP.NET]]></Database>
          <URL><![CDATA[http://msdn.microsoft.com/en-us/library/ms998274.aspx]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="15" color="red">
       <Name><![CDATA[Cross site scripting (verified)]]></Name>
       <ModuleName><![CDATA[Scripting (XSS.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">typeid</font></b> was set to <b><font color="dark">1'&quot;()&amp;%&lt;acx&gt;&lt;ScRiPt &gt;0alr(9816)&lt;/ScRiPt&gt;</font></b>]]></Details>
       <Affects><![CDATA[/SmallClass.asp]]></Affects>
       <Parameter><![CDATA[typeid]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[Malicious users may inject JavaScript, VBScript, ActiveX, HTML or Flash into a vulnerable application to fool a user in order to gather data from them.
An attacker can steal the session cookie and take over the account, impersonating the user.
It is also possible to modify the content of the page presented to the user.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to Cross Site Scripting (XSS) attacks.<br/><br/>
Cross site scripting (also referred to as XSS) is a vulnerability that allows an attacker to send malicious code (usually in the form of Javascript) to another user.
Because a browser cannot know if the script should be trusted or not, it will execute the script in the user context allowing the attacker to access any cookies or session tokens retained by the browser.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from The Cross Site Scripting FAQ - http://www.cgisecurity.com/articles/xss-faq.shtml </i> 

<h2>Introduction</h2>

<p>Websites today are more complex than ever, containing a lot of dynamic content making the experience for the user more enjoyable. Dynamic content is achieved through the use of web applications which can deliver different output to a user depending on their settings and needs. Dynamic websites suffer from a threat that static websites don't, called &quot;Cross Site Scripting&quot; (or XSS dubbed by other security professionals). Currently small informational tidbits about Cross Site Scripting holes exist but none really explain them to an average person or administrator. This FAQ was written to provide a better understanding of this emerging threat, and to give guidance on detection and prevention.</p>

<h2>&quot;What is Cross Site Scripting?&quot;</h2>

<p>Cross site scripting (also known as XSS) occurs when a web application gathers malicious data from a user. The data is usually gathered in the form of a hyperlink which contains malicious content within it. The user will most likely click on this link from another website, instant message, or simply just reading a web board or email message. Usually the attacker will encode the malicious portion of the link to the site in HEX (or other encoding methods) so the request is less suspicious looking to the user when clicked on. After the data is collected by the web application, it creates an output page for the user containing the malicious data that was originally sent to it, but in a manner to make it appear as valid content from the website. Many popular guestbook and forum programs allow users to submit posts with html and javascript embedded in them. If for example I was logged in as &quot;john&quot; and read a message by &quot;joe&quot; that contained malicious javascript in it, then it may be possible for &quot;joe&quot; to hijack my session just by reading his bulletin board post. Further details on how attacks like this are accomplished via &quot;cookie theft&quot; are explained in detail below.</p>

<h2>&quot;What does XSS and CSS mean?&quot;</h2>

<p>Often people refer to Cross Site Scripting as CSS. There has been a lot of confusion with Cascading Style Sheets (CSS) and cross site scripting. Some security people refer to Cross Site Scripting as XSS. If you hear someone say &quot;I found a XSS hole&quot;, they are talking about Cross Site Scripting for certain.</p>


<h2>&quot;What are the threats of Cross Site Scripting?&quot;</h2>

<p>Often attackers will inject JavaScript, VBScript, ActiveX, HTML, or Flash into a vulnerable application to fool a user (Read below for further details) in order to gather data from them. Everything from account hijacking, changing of user settings, cookie theft/poisoning, or false advertising is possible. New malicious uses are being found every day for XSS attacks. The post below by Brett Moore brings up a good point with regard to &quot;Denial Of Service&quot;, and potential &quot;auto-attacking&quot; of hosts if a user simply reads a post on a message board.</p>

<h2>&quot;What can I do to protect myself as a vendor?&quot;</h2>

<p>This is a simple answer. Never trust user input and always filter metacharacters. This will eliminate the majority of XSS attacks. Converting &lt; and &gt; to &amp;lt; and &amp;gt; is also suggested when it comes to script output. Remember XSS holes can be damaging and costly to your business if abused. Often attackers will disclose these holes to the public, which can erode customer and public confidence in the security and privacy of your organization's site. Filtering &lt; and &gt; alone will not solve all cross site scripting attacks and it is suggested you also attempt to filter out ( and ) by translating them to &amp;#40; and &amp;#41;, and also # and &amp; by translating them to &amp;#35 (#) and &amp;#38 (&amp;).</p>

<h2>&quot;What can I do to protect myself as a user?&quot;</h2>

<p>The easiest way to protect yourself as a user is to only follow links from the main website you wish to view. If you visit one website and it links to CNN for example, instead of clicking on it visit CNN's main site and use its search engine to find the content. This will probably eliminate ninety percent of the problem. Sometimes XSS can be executed automatically when you open an email, email attachment, read a guestbook, or bulletin board post. If you plan on opening an email, or reading a post on a public board from a person you don't know BE CAREFUL. One of the best ways to protect yourself is to turn off Javascript in your browser settings. In IE turn your security settings to high. This can prevent cookie theft, and in general is a safer thing to do.</p>

<h2>&quot;How common are XSS holes?&quot;</h2>

<p>Cross site scripting holes are gaining popularity among hackers as easy holes to find in large websites. Websites from FBI.gov, CNN.com, Time.com, Ebay, Yahoo, Apple computer, Microsoft, Zdnet, Wired, and Newsbytes have all had one form or another of XSS bugs.</p>

<p>Every month roughly 10-25 XSS holes are found in commercial products and advisories are published explaining the threat.</p>


<h2>&quot;Does encryption protect me?&quot;</h2>

<p>Websites that use SSL (https) are in no way more protected than websites that are not encrypted. The web applications work the same way as before, except the attack is taking place in an encrypted connection. People often think that because they see the lock on their browser it means everything is secure. This just isn't the case.</p>


<h2>&quot;Can XSS holes allow command execution?&quot;</h2>

<p>XSS holes can allow Javascript insertion, which may allow for limited execution. If an attacker were to exploit a browser flaw (browser hole) it could then be possible to execute commands on the client's side. If command execution were possible it would only be possible on the client side. In simple terms XSS holes can be used to help exploit other holes that may exist in your browser.</p>


<h2>&quot;What if I don't feel like fixing a CSS/XSS Hole?&quot;</h2>

<p>By not fixing an XSS hole this could allow possible user account compromise in portions of your site as they get added or updated. Cross Site Scripting has been found in various large sites recently and have been widely publicized. Left unrepaired, someone may discover it and publish a warning about your company. This may damage your company's reputation, depicting it as being lax on security matters. This of course also sends the message to your clients that you aren't dealing with every problem that arises, which turns into a trust issue. If your client doesn't trust you why would they wish to do business with you?</p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /SmallClass.asp?BigClassID=16&amp;SmallClassID=39&amp;typeid=1'%22()%26%25&lt;acx&gt;&lt;ScRiPt%20&gt;0alr(9816)&lt;/ScRiPt&gt; HTTP/1.1
Referer: http://zhaosheng.lyu.edu.cn
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA; Forcast2004%2D0089=sex=&amp;reglevel=&amp;fullname=&amp;UserLoginTimes=&amp;KEY=&amp;UserEmail=&amp;shenhe=&amp;passwd=&amp;purview=&amp;UserName=; ASPSESSIONIDQQRQBBQC=DGFMDJNCGOLLGKFNMLIPIDJK; ASPSESSIONIDSSRSCAQD=DECEDJNCBBDHMFKBIELAPLKG
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3130
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:51:44 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="79"><![CDATA[CWE-79]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[5.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix Cross Site Scripting Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/cross-site-scripting.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: How Cross-Site Scripting (XSS) Works]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-how-cross-site-scripting-xss-works/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[The Cross Site Scripting Faq]]></Database>
          <URL><![CDATA[http://www.cgisecurity.com/xss-faq.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Cross Site Scripting]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Cross_Site_Scripting]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Annihilation]]></Database>
          <URL><![CDATA[http://ha.ckers.org/blog/20060602/xss-annihilation/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Filter Evasion Cheat Sheet]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Cross site scripting]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Cross-site_scripting ]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How To: Prevent Cross-Site Scripting in ASP.NET]]></Database>
          <URL><![CDATA[http://msdn.microsoft.com/en-us/library/ms998274.aspx]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="16" color="red">
       <Name><![CDATA[Cross site scripting (verified)]]></Name>
       <ModuleName><![CDATA[Scripting (XSS.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">BigClassid</font></b> was set to <b><font color="dark">3'&quot;()&amp;%&lt;acx&gt;&lt;ScRiPt &gt;jjll(9674)&lt;/ScRiPt&gt;</font></b>]]></Details>
       <Affects><![CDATA[/nosmallClass.asp]]></Affects>
       <Parameter><![CDATA[BigClassid]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[Malicious users may inject JavaScript, VBScript, ActiveX, HTML or Flash into a vulnerable application to fool a user in order to gather data from them.
An attacker can steal the session cookie and take over the account, impersonating the user.
It is also possible to modify the content of the page presented to the user.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to Cross Site Scripting (XSS) attacks.<br/><br/>
Cross site scripting (also referred to as XSS) is a vulnerability that allows an attacker to send malicious code (usually in the form of Javascript) to another user.
Because a browser cannot know if the script should be trusted or not, it will execute the script in the user context allowing the attacker to access any cookies or session tokens retained by the browser.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from The Cross Site Scripting FAQ - http://www.cgisecurity.com/articles/xss-faq.shtml </i> 

<h2>Introduction</h2>

<p>Websites today are more complex than ever, containing a lot of dynamic content making the experience for the user more enjoyable. Dynamic content is achieved through the use of web applications which can deliver different output to a user depending on their settings and needs. Dynamic websites suffer from a threat that static websites don't, called &quot;Cross Site Scripting&quot; (or XSS dubbed by other security professionals). Currently small informational tidbits about Cross Site Scripting holes exist but none really explain them to an average person or administrator. This FAQ was written to provide a better understanding of this emerging threat, and to give guidance on detection and prevention.</p>

<h2>&quot;What is Cross Site Scripting?&quot;</h2>

<p>Cross site scripting (also known as XSS) occurs when a web application gathers malicious data from a user. The data is usually gathered in the form of a hyperlink which contains malicious content within it. The user will most likely click on this link from another website, instant message, or simply just reading a web board or email message. Usually the attacker will encode the malicious portion of the link to the site in HEX (or other encoding methods) so the request is less suspicious looking to the user when clicked on. After the data is collected by the web application, it creates an output page for the user containing the malicious data that was originally sent to it, but in a manner to make it appear as valid content from the website. Many popular guestbook and forum programs allow users to submit posts with html and javascript embedded in them. If for example I was logged in as &quot;john&quot; and read a message by &quot;joe&quot; that contained malicious javascript in it, then it may be possible for &quot;joe&quot; to hijack my session just by reading his bulletin board post. Further details on how attacks like this are accomplished via &quot;cookie theft&quot; are explained in detail below.</p>

<h2>&quot;What does XSS and CSS mean?&quot;</h2>

<p>Often people refer to Cross Site Scripting as CSS. There has been a lot of confusion with Cascading Style Sheets (CSS) and cross site scripting. Some security people refer to Cross Site Scripting as XSS. If you hear someone say &quot;I found a XSS hole&quot;, they are talking about Cross Site Scripting for certain.</p>


<h2>&quot;What are the threats of Cross Site Scripting?&quot;</h2>

<p>Often attackers will inject JavaScript, VBScript, ActiveX, HTML, or Flash into a vulnerable application to fool a user (Read below for further details) in order to gather data from them. Everything from account hijacking, changing of user settings, cookie theft/poisoning, or false advertising is possible. New malicious uses are being found every day for XSS attacks. The post below by Brett Moore brings up a good point with regard to &quot;Denial Of Service&quot;, and potential &quot;auto-attacking&quot; of hosts if a user simply reads a post on a message board.</p>

<h2>&quot;What can I do to protect myself as a vendor?&quot;</h2>

<p>This is a simple answer. Never trust user input and always filter metacharacters. This will eliminate the majority of XSS attacks. Converting &lt; and &gt; to &amp;lt; and &amp;gt; is also suggested when it comes to script output. Remember XSS holes can be damaging and costly to your business if abused. Often attackers will disclose these holes to the public, which can erode customer and public confidence in the security and privacy of your organization's site. Filtering &lt; and &gt; alone will not solve all cross site scripting attacks and it is suggested you also attempt to filter out ( and ) by translating them to &amp;#40; and &amp;#41;, and also # and &amp; by translating them to &amp;#35 (#) and &amp;#38 (&amp;).</p>

<h2>&quot;What can I do to protect myself as a user?&quot;</h2>

<p>The easiest way to protect yourself as a user is to only follow links from the main website you wish to view. If you visit one website and it links to CNN for example, instead of clicking on it visit CNN's main site and use its search engine to find the content. This will probably eliminate ninety percent of the problem. Sometimes XSS can be executed automatically when you open an email, email attachment, read a guestbook, or bulletin board post. If you plan on opening an email, or reading a post on a public board from a person you don't know BE CAREFUL. One of the best ways to protect yourself is to turn off Javascript in your browser settings. In IE turn your security settings to high. This can prevent cookie theft, and in general is a safer thing to do.</p>

<h2>&quot;How common are XSS holes?&quot;</h2>

<p>Cross site scripting holes are gaining popularity among hackers as easy holes to find in large websites. Websites from FBI.gov, CNN.com, Time.com, Ebay, Yahoo, Apple computer, Microsoft, Zdnet, Wired, and Newsbytes have all had one form or another of XSS bugs.</p>

<p>Every month roughly 10-25 XSS holes are found in commercial products and advisories are published explaining the threat.</p>


<h2>&quot;Does encryption protect me?&quot;</h2>

<p>Websites that use SSL (https) are in no way more protected than websites that are not encrypted. The web applications work the same way as before, except the attack is taking place in an encrypted connection. People often think that because they see the lock on their browser it means everything is secure. This just isn't the case.</p>


<h2>&quot;Can XSS holes allow command execution?&quot;</h2>

<p>XSS holes can allow Javascript insertion, which may allow for limited execution. If an attacker were to exploit a browser flaw (browser hole) it could then be possible to execute commands on the client's side. If command execution were possible it would only be possible on the client side. In simple terms XSS holes can be used to help exploit other holes that may exist in your browser.</p>


<h2>&quot;What if I don't feel like fixing a CSS/XSS Hole?&quot;</h2>

<p>By not fixing an XSS hole this could allow possible user account compromise in portions of your site as they get added or updated. Cross Site Scripting has been found in various large sites recently and have been widely publicized. Left unrepaired, someone may discover it and publish a warning about your company. This may damage your company's reputation, depicting it as being lax on security matters. This of course also sends the message to your clients that you aren't dealing with every problem that arises, which turns into a trust issue. If your client doesn't trust you why would they wish to do business with you?</p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /nosmallClass.asp?BigClassid=3'%22()%26%25&lt;acx&gt;&lt;ScRiPt%20&gt;jjll(9674)&lt;/ScRiPt&gt;&amp;typeid=1 HTTP/1.1
Referer: http://zhaosheng.lyu.edu.cn
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA; Forcast2004%2D0089=sex=&amp;reglevel=&amp;fullname=&amp;UserLoginTimes=&amp;KEY=&amp;UserEmail=&amp;shenhe=&amp;passwd=&amp;purview=&amp;UserName=; ASPSESSIONIDQQRQBBQC=DGFMDJNCGOLLGKFNMLIPIDJK; ASPSESSIONIDSSRSCAQD=DECEDJNCBBDHMFKBIELAPLKG
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3130
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:51:50 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="79"><![CDATA[CWE-79]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[5.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix Cross Site Scripting Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/cross-site-scripting.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: How Cross-Site Scripting (XSS) Works]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-how-cross-site-scripting-xss-works/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[The Cross Site Scripting Faq]]></Database>
          <URL><![CDATA[http://www.cgisecurity.com/xss-faq.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Cross Site Scripting]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Cross_Site_Scripting]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Annihilation]]></Database>
          <URL><![CDATA[http://ha.ckers.org/blog/20060602/xss-annihilation/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Filter Evasion Cheat Sheet]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Cross site scripting]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Cross-site_scripting ]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How To: Prevent Cross-Site Scripting in ASP.NET]]></Database>
          <URL><![CDATA[http://msdn.microsoft.com/en-us/library/ms998274.aspx]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="17" color="red">
       <Name><![CDATA[Cross site scripting (verified)]]></Name>
       <ModuleName><![CDATA[Scripting (XSS.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">BigClassid</font></b> was set to <b><font color="dark">3'&quot;()&amp;%&lt;acx&gt;&lt;ScRiPt &gt;w1Ov(9629)&lt;/ScRiPt&gt;</font></b>]]></Details>
       <Affects><![CDATA[/bigClass.asp]]></Affects>
       <Parameter><![CDATA[BigClassid]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[Malicious users may inject JavaScript, VBScript, ActiveX, HTML or Flash into a vulnerable application to fool a user in order to gather data from them.
An attacker can steal the session cookie and take over the account, impersonating the user.
It is also possible to modify the content of the page presented to the user.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to Cross Site Scripting (XSS) attacks.<br/><br/>
Cross site scripting (also referred to as XSS) is a vulnerability that allows an attacker to send malicious code (usually in the form of Javascript) to another user.
Because a browser cannot know if the script should be trusted or not, it will execute the script in the user context allowing the attacker to access any cookies or session tokens retained by the browser.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from The Cross Site Scripting FAQ - http://www.cgisecurity.com/articles/xss-faq.shtml </i> 

<h2>Introduction</h2>

<p>Websites today are more complex than ever, containing a lot of dynamic content making the experience for the user more enjoyable. Dynamic content is achieved through the use of web applications which can deliver different output to a user depending on their settings and needs. Dynamic websites suffer from a threat that static websites don't, called &quot;Cross Site Scripting&quot; (or XSS dubbed by other security professionals). Currently small informational tidbits about Cross Site Scripting holes exist but none really explain them to an average person or administrator. This FAQ was written to provide a better understanding of this emerging threat, and to give guidance on detection and prevention.</p>

<h2>&quot;What is Cross Site Scripting?&quot;</h2>

<p>Cross site scripting (also known as XSS) occurs when a web application gathers malicious data from a user. The data is usually gathered in the form of a hyperlink which contains malicious content within it. The user will most likely click on this link from another website, instant message, or simply just reading a web board or email message. Usually the attacker will encode the malicious portion of the link to the site in HEX (or other encoding methods) so the request is less suspicious looking to the user when clicked on. After the data is collected by the web application, it creates an output page for the user containing the malicious data that was originally sent to it, but in a manner to make it appear as valid content from the website. Many popular guestbook and forum programs allow users to submit posts with html and javascript embedded in them. If for example I was logged in as &quot;john&quot; and read a message by &quot;joe&quot; that contained malicious javascript in it, then it may be possible for &quot;joe&quot; to hijack my session just by reading his bulletin board post. Further details on how attacks like this are accomplished via &quot;cookie theft&quot; are explained in detail below.</p>

<h2>&quot;What does XSS and CSS mean?&quot;</h2>

<p>Often people refer to Cross Site Scripting as CSS. There has been a lot of confusion with Cascading Style Sheets (CSS) and cross site scripting. Some security people refer to Cross Site Scripting as XSS. If you hear someone say &quot;I found a XSS hole&quot;, they are talking about Cross Site Scripting for certain.</p>


<h2>&quot;What are the threats of Cross Site Scripting?&quot;</h2>

<p>Often attackers will inject JavaScript, VBScript, ActiveX, HTML, or Flash into a vulnerable application to fool a user (Read below for further details) in order to gather data from them. Everything from account hijacking, changing of user settings, cookie theft/poisoning, or false advertising is possible. New malicious uses are being found every day for XSS attacks. The post below by Brett Moore brings up a good point with regard to &quot;Denial Of Service&quot;, and potential &quot;auto-attacking&quot; of hosts if a user simply reads a post on a message board.</p>

<h2>&quot;What can I do to protect myself as a vendor?&quot;</h2>

<p>This is a simple answer. Never trust user input and always filter metacharacters. This will eliminate the majority of XSS attacks. Converting &lt; and &gt; to &amp;lt; and &amp;gt; is also suggested when it comes to script output. Remember XSS holes can be damaging and costly to your business if abused. Often attackers will disclose these holes to the public, which can erode customer and public confidence in the security and privacy of your organization's site. Filtering &lt; and &gt; alone will not solve all cross site scripting attacks and it is suggested you also attempt to filter out ( and ) by translating them to &amp;#40; and &amp;#41;, and also # and &amp; by translating them to &amp;#35 (#) and &amp;#38 (&amp;).</p>

<h2>&quot;What can I do to protect myself as a user?&quot;</h2>

<p>The easiest way to protect yourself as a user is to only follow links from the main website you wish to view. If you visit one website and it links to CNN for example, instead of clicking on it visit CNN's main site and use its search engine to find the content. This will probably eliminate ninety percent of the problem. Sometimes XSS can be executed automatically when you open an email, email attachment, read a guestbook, or bulletin board post. If you plan on opening an email, or reading a post on a public board from a person you don't know BE CAREFUL. One of the best ways to protect yourself is to turn off Javascript in your browser settings. In IE turn your security settings to high. This can prevent cookie theft, and in general is a safer thing to do.</p>

<h2>&quot;How common are XSS holes?&quot;</h2>

<p>Cross site scripting holes are gaining popularity among hackers as easy holes to find in large websites. Websites from FBI.gov, CNN.com, Time.com, Ebay, Yahoo, Apple computer, Microsoft, Zdnet, Wired, and Newsbytes have all had one form or another of XSS bugs.</p>

<p>Every month roughly 10-25 XSS holes are found in commercial products and advisories are published explaining the threat.</p>


<h2>&quot;Does encryption protect me?&quot;</h2>

<p>Websites that use SSL (https) are in no way more protected than websites that are not encrypted. The web applications work the same way as before, except the attack is taking place in an encrypted connection. People often think that because they see the lock on their browser it means everything is secure. This just isn't the case.</p>


<h2>&quot;Can XSS holes allow command execution?&quot;</h2>

<p>XSS holes can allow Javascript insertion, which may allow for limited execution. If an attacker were to exploit a browser flaw (browser hole) it could then be possible to execute commands on the client's side. If command execution were possible it would only be possible on the client side. In simple terms XSS holes can be used to help exploit other holes that may exist in your browser.</p>


<h2>&quot;What if I don't feel like fixing a CSS/XSS Hole?&quot;</h2>

<p>By not fixing an XSS hole this could allow possible user account compromise in portions of your site as they get added or updated. Cross Site Scripting has been found in various large sites recently and have been widely publicized. Left unrepaired, someone may discover it and publish a warning about your company. This may damage your company's reputation, depicting it as being lax on security matters. This of course also sends the message to your clients that you aren't dealing with every problem that arises, which turns into a trust issue. If your client doesn't trust you why would they wish to do business with you?</p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /bigClass.asp?BigClassid=3'%22()%26%25&lt;acx&gt;&lt;ScRiPt%20&gt;w1Ov(9629)&lt;/ScRiPt&gt;&amp;TypeId=1 HTTP/1.1
Referer: http://zhaosheng.lyu.edu.cn
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA; Forcast2004%2D0089=sex=&amp;reglevel=&amp;fullname=&amp;UserLoginTimes=&amp;KEY=&amp;UserEmail=&amp;shenhe=&amp;passwd=&amp;purview=&amp;UserName=; ASPSESSIONIDQQRQBBQC=DGFMDJNCGOLLGKFNMLIPIDJK; ASPSESSIONIDSSRSCAQD=DECEDJNCBBDHMFKBIELAPLKG
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3130
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:51:57 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="79"><![CDATA[CWE-79]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[5.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix Cross Site Scripting Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/cross-site-scripting.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: How Cross-Site Scripting (XSS) Works]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-how-cross-site-scripting-xss-works/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[The Cross Site Scripting Faq]]></Database>
          <URL><![CDATA[http://www.cgisecurity.com/xss-faq.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Cross Site Scripting]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Cross_Site_Scripting]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Annihilation]]></Database>
          <URL><![CDATA[http://ha.ckers.org/blog/20060602/xss-annihilation/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Filter Evasion Cheat Sheet]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Cross site scripting]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Cross-site_scripting ]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How To: Prevent Cross-Site Scripting in ASP.NET]]></Database>
          <URL><![CDATA[http://msdn.microsoft.com/en-us/library/ms998274.aspx]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="18" color="red">
       <Name><![CDATA[Cross site scripting (verified)]]></Name>
       <ModuleName><![CDATA[Scripting (XSS.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">TypeId</font></b> was set to <b><font color="dark">1'&quot;()&amp;%&lt;acx&gt;&lt;ScRiPt &gt;w1Ov(9002)&lt;/ScRiPt&gt;</font></b>]]></Details>
       <Affects><![CDATA[/bigClass.asp]]></Affects>
       <Parameter><![CDATA[TypeId]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[Malicious users may inject JavaScript, VBScript, ActiveX, HTML or Flash into a vulnerable application to fool a user in order to gather data from them.
An attacker can steal the session cookie and take over the account, impersonating the user.
It is also possible to modify the content of the page presented to the user.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to Cross Site Scripting (XSS) attacks.<br/><br/>
Cross site scripting (also referred to as XSS) is a vulnerability that allows an attacker to send malicious code (usually in the form of Javascript) to another user.
Because a browser cannot know if the script should be trusted or not, it will execute the script in the user context allowing the attacker to access any cookies or session tokens retained by the browser.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from The Cross Site Scripting FAQ - http://www.cgisecurity.com/articles/xss-faq.shtml </i> 

<h2>Introduction</h2>

<p>Websites today are more complex than ever, containing a lot of dynamic content making the experience for the user more enjoyable. Dynamic content is achieved through the use of web applications which can deliver different output to a user depending on their settings and needs. Dynamic websites suffer from a threat that static websites don't, called &quot;Cross Site Scripting&quot; (or XSS dubbed by other security professionals). Currently small informational tidbits about Cross Site Scripting holes exist but none really explain them to an average person or administrator. This FAQ was written to provide a better understanding of this emerging threat, and to give guidance on detection and prevention.</p>

<h2>&quot;What is Cross Site Scripting?&quot;</h2>

<p>Cross site scripting (also known as XSS) occurs when a web application gathers malicious data from a user. The data is usually gathered in the form of a hyperlink which contains malicious content within it. The user will most likely click on this link from another website, instant message, or simply just reading a web board or email message. Usually the attacker will encode the malicious portion of the link to the site in HEX (or other encoding methods) so the request is less suspicious looking to the user when clicked on. After the data is collected by the web application, it creates an output page for the user containing the malicious data that was originally sent to it, but in a manner to make it appear as valid content from the website. Many popular guestbook and forum programs allow users to submit posts with html and javascript embedded in them. If for example I was logged in as &quot;john&quot; and read a message by &quot;joe&quot; that contained malicious javascript in it, then it may be possible for &quot;joe&quot; to hijack my session just by reading his bulletin board post. Further details on how attacks like this are accomplished via &quot;cookie theft&quot; are explained in detail below.</p>

<h2>&quot;What does XSS and CSS mean?&quot;</h2>

<p>Often people refer to Cross Site Scripting as CSS. There has been a lot of confusion with Cascading Style Sheets (CSS) and cross site scripting. Some security people refer to Cross Site Scripting as XSS. If you hear someone say &quot;I found a XSS hole&quot;, they are talking about Cross Site Scripting for certain.</p>


<h2>&quot;What are the threats of Cross Site Scripting?&quot;</h2>

<p>Often attackers will inject JavaScript, VBScript, ActiveX, HTML, or Flash into a vulnerable application to fool a user (Read below for further details) in order to gather data from them. Everything from account hijacking, changing of user settings, cookie theft/poisoning, or false advertising is possible. New malicious uses are being found every day for XSS attacks. The post below by Brett Moore brings up a good point with regard to &quot;Denial Of Service&quot;, and potential &quot;auto-attacking&quot; of hosts if a user simply reads a post on a message board.</p>

<h2>&quot;What can I do to protect myself as a vendor?&quot;</h2>

<p>This is a simple answer. Never trust user input and always filter metacharacters. This will eliminate the majority of XSS attacks. Converting &lt; and &gt; to &amp;lt; and &amp;gt; is also suggested when it comes to script output. Remember XSS holes can be damaging and costly to your business if abused. Often attackers will disclose these holes to the public, which can erode customer and public confidence in the security and privacy of your organization's site. Filtering &lt; and &gt; alone will not solve all cross site scripting attacks and it is suggested you also attempt to filter out ( and ) by translating them to &amp;#40; and &amp;#41;, and also # and &amp; by translating them to &amp;#35 (#) and &amp;#38 (&amp;).</p>

<h2>&quot;What can I do to protect myself as a user?&quot;</h2>

<p>The easiest way to protect yourself as a user is to only follow links from the main website you wish to view. If you visit one website and it links to CNN for example, instead of clicking on it visit CNN's main site and use its search engine to find the content. This will probably eliminate ninety percent of the problem. Sometimes XSS can be executed automatically when you open an email, email attachment, read a guestbook, or bulletin board post. If you plan on opening an email, or reading a post on a public board from a person you don't know BE CAREFUL. One of the best ways to protect yourself is to turn off Javascript in your browser settings. In IE turn your security settings to high. This can prevent cookie theft, and in general is a safer thing to do.</p>

<h2>&quot;How common are XSS holes?&quot;</h2>

<p>Cross site scripting holes are gaining popularity among hackers as easy holes to find in large websites. Websites from FBI.gov, CNN.com, Time.com, Ebay, Yahoo, Apple computer, Microsoft, Zdnet, Wired, and Newsbytes have all had one form or another of XSS bugs.</p>

<p>Every month roughly 10-25 XSS holes are found in commercial products and advisories are published explaining the threat.</p>


<h2>&quot;Does encryption protect me?&quot;</h2>

<p>Websites that use SSL (https) are in no way more protected than websites that are not encrypted. The web applications work the same way as before, except the attack is taking place in an encrypted connection. People often think that because they see the lock on their browser it means everything is secure. This just isn't the case.</p>


<h2>&quot;Can XSS holes allow command execution?&quot;</h2>

<p>XSS holes can allow Javascript insertion, which may allow for limited execution. If an attacker were to exploit a browser flaw (browser hole) it could then be possible to execute commands on the client's side. If command execution were possible it would only be possible on the client side. In simple terms XSS holes can be used to help exploit other holes that may exist in your browser.</p>


<h2>&quot;What if I don't feel like fixing a CSS/XSS Hole?&quot;</h2>

<p>By not fixing an XSS hole this could allow possible user account compromise in portions of your site as they get added or updated. Cross Site Scripting has been found in various large sites recently and have been widely publicized. Left unrepaired, someone may discover it and publish a warning about your company. This may damage your company's reputation, depicting it as being lax on security matters. This of course also sends the message to your clients that you aren't dealing with every problem that arises, which turns into a trust issue. If your client doesn't trust you why would they wish to do business with you?</p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /bigClass.asp?BigClassid=4&amp;TypeId=1'%22()%26%25&lt;acx&gt;&lt;ScRiPt%20&gt;w1Ov(9002)&lt;/ScRiPt&gt; HTTP/1.1
Referer: http://zhaosheng.lyu.edu.cn
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA; Forcast2004%2D0089=sex=&amp;reglevel=&amp;fullname=&amp;UserLoginTimes=&amp;KEY=&amp;UserEmail=&amp;shenhe=&amp;passwd=&amp;purview=&amp;UserName=; ASPSESSIONIDQQRQBBQC=DGFMDJNCGOLLGKFNMLIPIDJK; ASPSESSIONIDSSRSCAQD=DECEDJNCBBDHMFKBIELAPLKG
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3130
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:51:58 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="79"><![CDATA[CWE-79]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[5.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix Cross Site Scripting Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/cross-site-scripting.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: How Cross-Site Scripting (XSS) Works]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-how-cross-site-scripting-xss-works/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[The Cross Site Scripting Faq]]></Database>
          <URL><![CDATA[http://www.cgisecurity.com/xss-faq.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Cross Site Scripting]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Cross_Site_Scripting]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Annihilation]]></Database>
          <URL><![CDATA[http://ha.ckers.org/blog/20060602/xss-annihilation/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Filter Evasion Cheat Sheet]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Cross site scripting]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Cross-site_scripting ]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How To: Prevent Cross-Site Scripting in ASP.NET]]></Database>
          <URL><![CDATA[http://msdn.microsoft.com/en-us/library/ms998274.aspx]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="19" color="red">
       <Name><![CDATA[Cross site scripting (verified)]]></Name>
       <ModuleName><![CDATA[Scripting (XSS.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">BigClassid</font></b> was set to <b><font color="dark">2'&quot;()&amp;%&lt;acx&gt;&lt;ScRiPt &gt;F7jD(9428)&lt;/ScRiPt&gt;</font></b>]]></Details>
       <Affects><![CDATA[/BigClass-ld.asp]]></Affects>
       <Parameter><![CDATA[BigClassid]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[Malicious users may inject JavaScript, VBScript, ActiveX, HTML or Flash into a vulnerable application to fool a user in order to gather data from them.
An attacker can steal the session cookie and take over the account, impersonating the user.
It is also possible to modify the content of the page presented to the user.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to Cross Site Scripting (XSS) attacks.<br/><br/>
Cross site scripting (also referred to as XSS) is a vulnerability that allows an attacker to send malicious code (usually in the form of Javascript) to another user.
Because a browser cannot know if the script should be trusted or not, it will execute the script in the user context allowing the attacker to access any cookies or session tokens retained by the browser.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from The Cross Site Scripting FAQ - http://www.cgisecurity.com/articles/xss-faq.shtml </i> 

<h2>Introduction</h2>

<p>Websites today are more complex than ever, containing a lot of dynamic content making the experience for the user more enjoyable. Dynamic content is achieved through the use of web applications which can deliver different output to a user depending on their settings and needs. Dynamic websites suffer from a threat that static websites don't, called &quot;Cross Site Scripting&quot; (or XSS dubbed by other security professionals). Currently small informational tidbits about Cross Site Scripting holes exist but none really explain them to an average person or administrator. This FAQ was written to provide a better understanding of this emerging threat, and to give guidance on detection and prevention.</p>

<h2>&quot;What is Cross Site Scripting?&quot;</h2>

<p>Cross site scripting (also known as XSS) occurs when a web application gathers malicious data from a user. The data is usually gathered in the form of a hyperlink which contains malicious content within it. The user will most likely click on this link from another website, instant message, or simply just reading a web board or email message. Usually the attacker will encode the malicious portion of the link to the site in HEX (or other encoding methods) so the request is less suspicious looking to the user when clicked on. After the data is collected by the web application, it creates an output page for the user containing the malicious data that was originally sent to it, but in a manner to make it appear as valid content from the website. Many popular guestbook and forum programs allow users to submit posts with html and javascript embedded in them. If for example I was logged in as &quot;john&quot; and read a message by &quot;joe&quot; that contained malicious javascript in it, then it may be possible for &quot;joe&quot; to hijack my session just by reading his bulletin board post. Further details on how attacks like this are accomplished via &quot;cookie theft&quot; are explained in detail below.</p>

<h2>&quot;What does XSS and CSS mean?&quot;</h2>

<p>Often people refer to Cross Site Scripting as CSS. There has been a lot of confusion with Cascading Style Sheets (CSS) and cross site scripting. Some security people refer to Cross Site Scripting as XSS. If you hear someone say &quot;I found a XSS hole&quot;, they are talking about Cross Site Scripting for certain.</p>


<h2>&quot;What are the threats of Cross Site Scripting?&quot;</h2>

<p>Often attackers will inject JavaScript, VBScript, ActiveX, HTML, or Flash into a vulnerable application to fool a user (Read below for further details) in order to gather data from them. Everything from account hijacking, changing of user settings, cookie theft/poisoning, or false advertising is possible. New malicious uses are being found every day for XSS attacks. The post below by Brett Moore brings up a good point with regard to &quot;Denial Of Service&quot;, and potential &quot;auto-attacking&quot; of hosts if a user simply reads a post on a message board.</p>

<h2>&quot;What can I do to protect myself as a vendor?&quot;</h2>

<p>This is a simple answer. Never trust user input and always filter metacharacters. This will eliminate the majority of XSS attacks. Converting &lt; and &gt; to &amp;lt; and &amp;gt; is also suggested when it comes to script output. Remember XSS holes can be damaging and costly to your business if abused. Often attackers will disclose these holes to the public, which can erode customer and public confidence in the security and privacy of your organization's site. Filtering &lt; and &gt; alone will not solve all cross site scripting attacks and it is suggested you also attempt to filter out ( and ) by translating them to &amp;#40; and &amp;#41;, and also # and &amp; by translating them to &amp;#35 (#) and &amp;#38 (&amp;).</p>

<h2>&quot;What can I do to protect myself as a user?&quot;</h2>

<p>The easiest way to protect yourself as a user is to only follow links from the main website you wish to view. If you visit one website and it links to CNN for example, instead of clicking on it visit CNN's main site and use its search engine to find the content. This will probably eliminate ninety percent of the problem. Sometimes XSS can be executed automatically when you open an email, email attachment, read a guestbook, or bulletin board post. If you plan on opening an email, or reading a post on a public board from a person you don't know BE CAREFUL. One of the best ways to protect yourself is to turn off Javascript in your browser settings. In IE turn your security settings to high. This can prevent cookie theft, and in general is a safer thing to do.</p>

<h2>&quot;How common are XSS holes?&quot;</h2>

<p>Cross site scripting holes are gaining popularity among hackers as easy holes to find in large websites. Websites from FBI.gov, CNN.com, Time.com, Ebay, Yahoo, Apple computer, Microsoft, Zdnet, Wired, and Newsbytes have all had one form or another of XSS bugs.</p>

<p>Every month roughly 10-25 XSS holes are found in commercial products and advisories are published explaining the threat.</p>


<h2>&quot;Does encryption protect me?&quot;</h2>

<p>Websites that use SSL (https) are in no way more protected than websites that are not encrypted. The web applications work the same way as before, except the attack is taking place in an encrypted connection. People often think that because they see the lock on their browser it means everything is secure. This just isn't the case.</p>


<h2>&quot;Can XSS holes allow command execution?&quot;</h2>

<p>XSS holes can allow Javascript insertion, which may allow for limited execution. If an attacker were to exploit a browser flaw (browser hole) it could then be possible to execute commands on the client's side. If command execution were possible it would only be possible on the client side. In simple terms XSS holes can be used to help exploit other holes that may exist in your browser.</p>


<h2>&quot;What if I don't feel like fixing a CSS/XSS Hole?&quot;</h2>

<p>By not fixing an XSS hole this could allow possible user account compromise in portions of your site as they get added or updated. Cross Site Scripting has been found in various large sites recently and have been widely publicized. Left unrepaired, someone may discover it and publish a warning about your company. This may damage your company's reputation, depicting it as being lax on security matters. This of course also sends the message to your clients that you aren't dealing with every problem that arises, which turns into a trust issue. If your client doesn't trust you why would they wish to do business with you?</p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /BigClass-ld.asp?BigClassid=2'%22()%26%25&lt;acx&gt;&lt;ScRiPt%20&gt;F7jD(9428)&lt;/ScRiPt&gt;&amp;TypeId=1 HTTP/1.1
Referer: http://zhaosheng.lyu.edu.cn
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA; Forcast2004%2D0089=sex=&amp;reglevel=&amp;fullname=&amp;UserLoginTimes=&amp;KEY=&amp;UserEmail=&amp;shenhe=&amp;passwd=&amp;purview=&amp;UserName=; ASPSESSIONIDQQRQBBQC=DGFMDJNCGOLLGKFNMLIPIDJK; ASPSESSIONIDSSRSCAQD=DECEDJNCBBDHMFKBIELAPLKG
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3130
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:52:01 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="79"><![CDATA[CWE-79]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[5.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix Cross Site Scripting Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/cross-site-scripting.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: How Cross-Site Scripting (XSS) Works]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-how-cross-site-scripting-xss-works/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[The Cross Site Scripting Faq]]></Database>
          <URL><![CDATA[http://www.cgisecurity.com/xss-faq.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Cross Site Scripting]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Cross_Site_Scripting]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Annihilation]]></Database>
          <URL><![CDATA[http://ha.ckers.org/blog/20060602/xss-annihilation/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Filter Evasion Cheat Sheet]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Cross site scripting]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Cross-site_scripting ]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How To: Prevent Cross-Site Scripting in ASP.NET]]></Database>
          <URL><![CDATA[http://msdn.microsoft.com/en-us/library/ms998274.aspx]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="20" color="red">
       <Name><![CDATA[Cross site scripting (verified)]]></Name>
       <ModuleName><![CDATA[Scripting (XSS.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">TypeId</font></b> was set to <b><font color="dark">1'&quot;()&amp;%&lt;acx&gt;&lt;ScRiPt &gt;F7jD(9106)&lt;/ScRiPt&gt;</font></b>]]></Details>
       <Affects><![CDATA[/BigClass-ld.asp]]></Affects>
       <Parameter><![CDATA[TypeId]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[Malicious users may inject JavaScript, VBScript, ActiveX, HTML or Flash into a vulnerable application to fool a user in order to gather data from them.
An attacker can steal the session cookie and take over the account, impersonating the user.
It is also possible to modify the content of the page presented to the user.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to Cross Site Scripting (XSS) attacks.<br/><br/>
Cross site scripting (also referred to as XSS) is a vulnerability that allows an attacker to send malicious code (usually in the form of Javascript) to another user.
Because a browser cannot know if the script should be trusted or not, it will execute the script in the user context allowing the attacker to access any cookies or session tokens retained by the browser.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from The Cross Site Scripting FAQ - http://www.cgisecurity.com/articles/xss-faq.shtml </i> 

<h2>Introduction</h2>

<p>Websites today are more complex than ever, containing a lot of dynamic content making the experience for the user more enjoyable. Dynamic content is achieved through the use of web applications which can deliver different output to a user depending on their settings and needs. Dynamic websites suffer from a threat that static websites don't, called &quot;Cross Site Scripting&quot; (or XSS dubbed by other security professionals). Currently small informational tidbits about Cross Site Scripting holes exist but none really explain them to an average person or administrator. This FAQ was written to provide a better understanding of this emerging threat, and to give guidance on detection and prevention.</p>

<h2>&quot;What is Cross Site Scripting?&quot;</h2>

<p>Cross site scripting (also known as XSS) occurs when a web application gathers malicious data from a user. The data is usually gathered in the form of a hyperlink which contains malicious content within it. The user will most likely click on this link from another website, instant message, or simply just reading a web board or email message. Usually the attacker will encode the malicious portion of the link to the site in HEX (or other encoding methods) so the request is less suspicious looking to the user when clicked on. After the data is collected by the web application, it creates an output page for the user containing the malicious data that was originally sent to it, but in a manner to make it appear as valid content from the website. Many popular guestbook and forum programs allow users to submit posts with html and javascript embedded in them. If for example I was logged in as &quot;john&quot; and read a message by &quot;joe&quot; that contained malicious javascript in it, then it may be possible for &quot;joe&quot; to hijack my session just by reading his bulletin board post. Further details on how attacks like this are accomplished via &quot;cookie theft&quot; are explained in detail below.</p>

<h2>&quot;What does XSS and CSS mean?&quot;</h2>

<p>Often people refer to Cross Site Scripting as CSS. There has been a lot of confusion with Cascading Style Sheets (CSS) and cross site scripting. Some security people refer to Cross Site Scripting as XSS. If you hear someone say &quot;I found a XSS hole&quot;, they are talking about Cross Site Scripting for certain.</p>


<h2>&quot;What are the threats of Cross Site Scripting?&quot;</h2>

<p>Often attackers will inject JavaScript, VBScript, ActiveX, HTML, or Flash into a vulnerable application to fool a user (Read below for further details) in order to gather data from them. Everything from account hijacking, changing of user settings, cookie theft/poisoning, or false advertising is possible. New malicious uses are being found every day for XSS attacks. The post below by Brett Moore brings up a good point with regard to &quot;Denial Of Service&quot;, and potential &quot;auto-attacking&quot; of hosts if a user simply reads a post on a message board.</p>

<h2>&quot;What can I do to protect myself as a vendor?&quot;</h2>

<p>This is a simple answer. Never trust user input and always filter metacharacters. This will eliminate the majority of XSS attacks. Converting &lt; and &gt; to &amp;lt; and &amp;gt; is also suggested when it comes to script output. Remember XSS holes can be damaging and costly to your business if abused. Often attackers will disclose these holes to the public, which can erode customer and public confidence in the security and privacy of your organization's site. Filtering &lt; and &gt; alone will not solve all cross site scripting attacks and it is suggested you also attempt to filter out ( and ) by translating them to &amp;#40; and &amp;#41;, and also # and &amp; by translating them to &amp;#35 (#) and &amp;#38 (&amp;).</p>

<h2>&quot;What can I do to protect myself as a user?&quot;</h2>

<p>The easiest way to protect yourself as a user is to only follow links from the main website you wish to view. If you visit one website and it links to CNN for example, instead of clicking on it visit CNN's main site and use its search engine to find the content. This will probably eliminate ninety percent of the problem. Sometimes XSS can be executed automatically when you open an email, email attachment, read a guestbook, or bulletin board post. If you plan on opening an email, or reading a post on a public board from a person you don't know BE CAREFUL. One of the best ways to protect yourself is to turn off Javascript in your browser settings. In IE turn your security settings to high. This can prevent cookie theft, and in general is a safer thing to do.</p>

<h2>&quot;How common are XSS holes?&quot;</h2>

<p>Cross site scripting holes are gaining popularity among hackers as easy holes to find in large websites. Websites from FBI.gov, CNN.com, Time.com, Ebay, Yahoo, Apple computer, Microsoft, Zdnet, Wired, and Newsbytes have all had one form or another of XSS bugs.</p>

<p>Every month roughly 10-25 XSS holes are found in commercial products and advisories are published explaining the threat.</p>


<h2>&quot;Does encryption protect me?&quot;</h2>

<p>Websites that use SSL (https) are in no way more protected than websites that are not encrypted. The web applications work the same way as before, except the attack is taking place in an encrypted connection. People often think that because they see the lock on their browser it means everything is secure. This just isn't the case.</p>


<h2>&quot;Can XSS holes allow command execution?&quot;</h2>

<p>XSS holes can allow Javascript insertion, which may allow for limited execution. If an attacker were to exploit a browser flaw (browser hole) it could then be possible to execute commands on the client's side. If command execution were possible it would only be possible on the client side. In simple terms XSS holes can be used to help exploit other holes that may exist in your browser.</p>


<h2>&quot;What if I don't feel like fixing a CSS/XSS Hole?&quot;</h2>

<p>By not fixing an XSS hole this could allow possible user account compromise in portions of your site as they get added or updated. Cross Site Scripting has been found in various large sites recently and have been widely publicized. Left unrepaired, someone may discover it and publish a warning about your company. This may damage your company's reputation, depicting it as being lax on security matters. This of course also sends the message to your clients that you aren't dealing with every problem that arises, which turns into a trust issue. If your client doesn't trust you why would they wish to do business with you?</p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /BigClass-ld.asp?BigClassid=2&amp;TypeId=1'%22()%26%25&lt;acx&gt;&lt;ScRiPt%20&gt;F7jD(9106)&lt;/ScRiPt&gt; HTTP/1.1
Referer: http://zhaosheng.lyu.edu.cn
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA; Forcast2004%2D0089=sex=&amp;reglevel=&amp;fullname=&amp;UserLoginTimes=&amp;KEY=&amp;UserEmail=&amp;shenhe=&amp;passwd=&amp;purview=&amp;UserName=; ASPSESSIONIDQQRQBBQC=DGFMDJNCGOLLGKFNMLIPIDJK; ASPSESSIONIDSSRSCAQD=DECEDJNCBBDHMFKBIELAPLKG
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3130
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:52:02 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="79"><![CDATA[CWE-79]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[5.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix Cross Site Scripting Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/cross-site-scripting.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: How Cross-Site Scripting (XSS) Works]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-how-cross-site-scripting-xss-works/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[The Cross Site Scripting Faq]]></Database>
          <URL><![CDATA[http://www.cgisecurity.com/xss-faq.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Cross Site Scripting]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Cross_Site_Scripting]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Annihilation]]></Database>
          <URL><![CDATA[http://ha.ckers.org/blog/20060602/xss-annihilation/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Filter Evasion Cheat Sheet]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Cross site scripting]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Cross-site_scripting ]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How To: Prevent Cross-Site Scripting in ASP.NET]]></Database>
          <URL><![CDATA[http://msdn.microsoft.com/en-us/library/ms998274.aspx]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="21" color="red">
       <Name><![CDATA[Cross site scripting (verified)]]></Name>
       <ModuleName><![CDATA[Scripting (XSS.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">BigClassid</font></b> was set to <b><font color="dark">16'&quot;()&amp;%&lt;acx&gt;&lt;ScRiPt &gt;djzF(9795)&lt;/ScRiPt&gt;</font></b>]]></Details>
       <Affects><![CDATA[/bigClass-zy.asp]]></Affects>
       <Parameter><![CDATA[BigClassid]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[Malicious users may inject JavaScript, VBScript, ActiveX, HTML or Flash into a vulnerable application to fool a user in order to gather data from them.
An attacker can steal the session cookie and take over the account, impersonating the user.
It is also possible to modify the content of the page presented to the user.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to Cross Site Scripting (XSS) attacks.<br/><br/>
Cross site scripting (also referred to as XSS) is a vulnerability that allows an attacker to send malicious code (usually in the form of Javascript) to another user.
Because a browser cannot know if the script should be trusted or not, it will execute the script in the user context allowing the attacker to access any cookies or session tokens retained by the browser.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from The Cross Site Scripting FAQ - http://www.cgisecurity.com/articles/xss-faq.shtml </i> 

<h2>Introduction</h2>

<p>Websites today are more complex than ever, containing a lot of dynamic content making the experience for the user more enjoyable. Dynamic content is achieved through the use of web applications which can deliver different output to a user depending on their settings and needs. Dynamic websites suffer from a threat that static websites don't, called &quot;Cross Site Scripting&quot; (or XSS dubbed by other security professionals). Currently small informational tidbits about Cross Site Scripting holes exist but none really explain them to an average person or administrator. This FAQ was written to provide a better understanding of this emerging threat, and to give guidance on detection and prevention.</p>

<h2>&quot;What is Cross Site Scripting?&quot;</h2>

<p>Cross site scripting (also known as XSS) occurs when a web application gathers malicious data from a user. The data is usually gathered in the form of a hyperlink which contains malicious content within it. The user will most likely click on this link from another website, instant message, or simply just reading a web board or email message. Usually the attacker will encode the malicious portion of the link to the site in HEX (or other encoding methods) so the request is less suspicious looking to the user when clicked on. After the data is collected by the web application, it creates an output page for the user containing the malicious data that was originally sent to it, but in a manner to make it appear as valid content from the website. Many popular guestbook and forum programs allow users to submit posts with html and javascript embedded in them. If for example I was logged in as &quot;john&quot; and read a message by &quot;joe&quot; that contained malicious javascript in it, then it may be possible for &quot;joe&quot; to hijack my session just by reading his bulletin board post. Further details on how attacks like this are accomplished via &quot;cookie theft&quot; are explained in detail below.</p>

<h2>&quot;What does XSS and CSS mean?&quot;</h2>

<p>Often people refer to Cross Site Scripting as CSS. There has been a lot of confusion with Cascading Style Sheets (CSS) and cross site scripting. Some security people refer to Cross Site Scripting as XSS. If you hear someone say &quot;I found a XSS hole&quot;, they are talking about Cross Site Scripting for certain.</p>


<h2>&quot;What are the threats of Cross Site Scripting?&quot;</h2>

<p>Often attackers will inject JavaScript, VBScript, ActiveX, HTML, or Flash into a vulnerable application to fool a user (Read below for further details) in order to gather data from them. Everything from account hijacking, changing of user settings, cookie theft/poisoning, or false advertising is possible. New malicious uses are being found every day for XSS attacks. The post below by Brett Moore brings up a good point with regard to &quot;Denial Of Service&quot;, and potential &quot;auto-attacking&quot; of hosts if a user simply reads a post on a message board.</p>

<h2>&quot;What can I do to protect myself as a vendor?&quot;</h2>

<p>This is a simple answer. Never trust user input and always filter metacharacters. This will eliminate the majority of XSS attacks. Converting &lt; and &gt; to &amp;lt; and &amp;gt; is also suggested when it comes to script output. Remember XSS holes can be damaging and costly to your business if abused. Often attackers will disclose these holes to the public, which can erode customer and public confidence in the security and privacy of your organization's site. Filtering &lt; and &gt; alone will not solve all cross site scripting attacks and it is suggested you also attempt to filter out ( and ) by translating them to &amp;#40; and &amp;#41;, and also # and &amp; by translating them to &amp;#35 (#) and &amp;#38 (&amp;).</p>

<h2>&quot;What can I do to protect myself as a user?&quot;</h2>

<p>The easiest way to protect yourself as a user is to only follow links from the main website you wish to view. If you visit one website and it links to CNN for example, instead of clicking on it visit CNN's main site and use its search engine to find the content. This will probably eliminate ninety percent of the problem. Sometimes XSS can be executed automatically when you open an email, email attachment, read a guestbook, or bulletin board post. If you plan on opening an email, or reading a post on a public board from a person you don't know BE CAREFUL. One of the best ways to protect yourself is to turn off Javascript in your browser settings. In IE turn your security settings to high. This can prevent cookie theft, and in general is a safer thing to do.</p>

<h2>&quot;How common are XSS holes?&quot;</h2>

<p>Cross site scripting holes are gaining popularity among hackers as easy holes to find in large websites. Websites from FBI.gov, CNN.com, Time.com, Ebay, Yahoo, Apple computer, Microsoft, Zdnet, Wired, and Newsbytes have all had one form or another of XSS bugs.</p>

<p>Every month roughly 10-25 XSS holes are found in commercial products and advisories are published explaining the threat.</p>


<h2>&quot;Does encryption protect me?&quot;</h2>

<p>Websites that use SSL (https) are in no way more protected than websites that are not encrypted. The web applications work the same way as before, except the attack is taking place in an encrypted connection. People often think that because they see the lock on their browser it means everything is secure. This just isn't the case.</p>


<h2>&quot;Can XSS holes allow command execution?&quot;</h2>

<p>XSS holes can allow Javascript insertion, which may allow for limited execution. If an attacker were to exploit a browser flaw (browser hole) it could then be possible to execute commands on the client's side. If command execution were possible it would only be possible on the client side. In simple terms XSS holes can be used to help exploit other holes that may exist in your browser.</p>


<h2>&quot;What if I don't feel like fixing a CSS/XSS Hole?&quot;</h2>

<p>By not fixing an XSS hole this could allow possible user account compromise in portions of your site as they get added or updated. Cross Site Scripting has been found in various large sites recently and have been widely publicized. Left unrepaired, someone may discover it and publish a warning about your company. This may damage your company's reputation, depicting it as being lax on security matters. This of course also sends the message to your clients that you aren't dealing with every problem that arises, which turns into a trust issue. If your client doesn't trust you why would they wish to do business with you?</p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /bigClass-zy.asp?BigClassid=16'%22()%26%25&lt;acx&gt;&lt;ScRiPt%20&gt;djzF(9795)&lt;/ScRiPt&gt;&amp;TypeId=1 HTTP/1.1
Referer: http://zhaosheng.lyu.edu.cn
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA; Forcast2004%2D0089=sex=&amp;reglevel=&amp;fullname=&amp;UserLoginTimes=&amp;KEY=&amp;UserEmail=&amp;shenhe=&amp;passwd=&amp;purview=&amp;UserName=; ASPSESSIONIDQQRQBBQC=DGFMDJNCGOLLGKFNMLIPIDJK; ASPSESSIONIDSSRSCAQD=DECEDJNCBBDHMFKBIELAPLKG
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3131
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:52:05 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="79"><![CDATA[CWE-79]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[5.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix Cross Site Scripting Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/cross-site-scripting.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: How Cross-Site Scripting (XSS) Works]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-how-cross-site-scripting-xss-works/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[The Cross Site Scripting Faq]]></Database>
          <URL><![CDATA[http://www.cgisecurity.com/xss-faq.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Cross Site Scripting]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Cross_Site_Scripting]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Annihilation]]></Database>
          <URL><![CDATA[http://ha.ckers.org/blog/20060602/xss-annihilation/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Filter Evasion Cheat Sheet]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Cross site scripting]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Cross-site_scripting ]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How To: Prevent Cross-Site Scripting in ASP.NET]]></Database>
          <URL><![CDATA[http://msdn.microsoft.com/en-us/library/ms998274.aspx]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="22" color="red">
       <Name><![CDATA[Cross site scripting (verified)]]></Name>
       <ModuleName><![CDATA[Scripting (XSS.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">TypeId</font></b> was set to <b><font color="dark">1'&quot;()&amp;%&lt;acx&gt;&lt;ScRiPt &gt;djzF(9590)&lt;/ScRiPt&gt;</font></b>]]></Details>
       <Affects><![CDATA[/bigClass-zy.asp]]></Affects>
       <Parameter><![CDATA[TypeId]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[Malicious users may inject JavaScript, VBScript, ActiveX, HTML or Flash into a vulnerable application to fool a user in order to gather data from them.
An attacker can steal the session cookie and take over the account, impersonating the user.
It is also possible to modify the content of the page presented to the user.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to Cross Site Scripting (XSS) attacks.<br/><br/>
Cross site scripting (also referred to as XSS) is a vulnerability that allows an attacker to send malicious code (usually in the form of Javascript) to another user.
Because a browser cannot know if the script should be trusted or not, it will execute the script in the user context allowing the attacker to access any cookies or session tokens retained by the browser.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from The Cross Site Scripting FAQ - http://www.cgisecurity.com/articles/xss-faq.shtml </i> 

<h2>Introduction</h2>

<p>Websites today are more complex than ever, containing a lot of dynamic content making the experience for the user more enjoyable. Dynamic content is achieved through the use of web applications which can deliver different output to a user depending on their settings and needs. Dynamic websites suffer from a threat that static websites don't, called &quot;Cross Site Scripting&quot; (or XSS dubbed by other security professionals). Currently small informational tidbits about Cross Site Scripting holes exist but none really explain them to an average person or administrator. This FAQ was written to provide a better understanding of this emerging threat, and to give guidance on detection and prevention.</p>

<h2>&quot;What is Cross Site Scripting?&quot;</h2>

<p>Cross site scripting (also known as XSS) occurs when a web application gathers malicious data from a user. The data is usually gathered in the form of a hyperlink which contains malicious content within it. The user will most likely click on this link from another website, instant message, or simply just reading a web board or email message. Usually the attacker will encode the malicious portion of the link to the site in HEX (or other encoding methods) so the request is less suspicious looking to the user when clicked on. After the data is collected by the web application, it creates an output page for the user containing the malicious data that was originally sent to it, but in a manner to make it appear as valid content from the website. Many popular guestbook and forum programs allow users to submit posts with html and javascript embedded in them. If for example I was logged in as &quot;john&quot; and read a message by &quot;joe&quot; that contained malicious javascript in it, then it may be possible for &quot;joe&quot; to hijack my session just by reading his bulletin board post. Further details on how attacks like this are accomplished via &quot;cookie theft&quot; are explained in detail below.</p>

<h2>&quot;What does XSS and CSS mean?&quot;</h2>

<p>Often people refer to Cross Site Scripting as CSS. There has been a lot of confusion with Cascading Style Sheets (CSS) and cross site scripting. Some security people refer to Cross Site Scripting as XSS. If you hear someone say &quot;I found a XSS hole&quot;, they are talking about Cross Site Scripting for certain.</p>


<h2>&quot;What are the threats of Cross Site Scripting?&quot;</h2>

<p>Often attackers will inject JavaScript, VBScript, ActiveX, HTML, or Flash into a vulnerable application to fool a user (Read below for further details) in order to gather data from them. Everything from account hijacking, changing of user settings, cookie theft/poisoning, or false advertising is possible. New malicious uses are being found every day for XSS attacks. The post below by Brett Moore brings up a good point with regard to &quot;Denial Of Service&quot;, and potential &quot;auto-attacking&quot; of hosts if a user simply reads a post on a message board.</p>

<h2>&quot;What can I do to protect myself as a vendor?&quot;</h2>

<p>This is a simple answer. Never trust user input and always filter metacharacters. This will eliminate the majority of XSS attacks. Converting &lt; and &gt; to &amp;lt; and &amp;gt; is also suggested when it comes to script output. Remember XSS holes can be damaging and costly to your business if abused. Often attackers will disclose these holes to the public, which can erode customer and public confidence in the security and privacy of your organization's site. Filtering &lt; and &gt; alone will not solve all cross site scripting attacks and it is suggested you also attempt to filter out ( and ) by translating them to &amp;#40; and &amp;#41;, and also # and &amp; by translating them to &amp;#35 (#) and &amp;#38 (&amp;).</p>

<h2>&quot;What can I do to protect myself as a user?&quot;</h2>

<p>The easiest way to protect yourself as a user is to only follow links from the main website you wish to view. If you visit one website and it links to CNN for example, instead of clicking on it visit CNN's main site and use its search engine to find the content. This will probably eliminate ninety percent of the problem. Sometimes XSS can be executed automatically when you open an email, email attachment, read a guestbook, or bulletin board post. If you plan on opening an email, or reading a post on a public board from a person you don't know BE CAREFUL. One of the best ways to protect yourself is to turn off Javascript in your browser settings. In IE turn your security settings to high. This can prevent cookie theft, and in general is a safer thing to do.</p>

<h2>&quot;How common are XSS holes?&quot;</h2>

<p>Cross site scripting holes are gaining popularity among hackers as easy holes to find in large websites. Websites from FBI.gov, CNN.com, Time.com, Ebay, Yahoo, Apple computer, Microsoft, Zdnet, Wired, and Newsbytes have all had one form or another of XSS bugs.</p>

<p>Every month roughly 10-25 XSS holes are found in commercial products and advisories are published explaining the threat.</p>


<h2>&quot;Does encryption protect me?&quot;</h2>

<p>Websites that use SSL (https) are in no way more protected than websites that are not encrypted. The web applications work the same way as before, except the attack is taking place in an encrypted connection. People often think that because they see the lock on their browser it means everything is secure. This just isn't the case.</p>


<h2>&quot;Can XSS holes allow command execution?&quot;</h2>

<p>XSS holes can allow Javascript insertion, which may allow for limited execution. If an attacker were to exploit a browser flaw (browser hole) it could then be possible to execute commands on the client's side. If command execution were possible it would only be possible on the client side. In simple terms XSS holes can be used to help exploit other holes that may exist in your browser.</p>


<h2>&quot;What if I don't feel like fixing a CSS/XSS Hole?&quot;</h2>

<p>By not fixing an XSS hole this could allow possible user account compromise in portions of your site as they get added or updated. Cross Site Scripting has been found in various large sites recently and have been widely publicized. Left unrepaired, someone may discover it and publish a warning about your company. This may damage your company's reputation, depicting it as being lax on security matters. This of course also sends the message to your clients that you aren't dealing with every problem that arises, which turns into a trust issue. If your client doesn't trust you why would they wish to do business with you?</p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /bigClass-zy.asp?BigClassid=16&amp;TypeId=1'%22()%26%25&lt;acx&gt;&lt;ScRiPt%20&gt;djzF(9590)&lt;/ScRiPt&gt; HTTP/1.1
Referer: http://zhaosheng.lyu.edu.cn
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA; Forcast2004%2D0089=sex=&amp;reglevel=&amp;fullname=&amp;UserLoginTimes=&amp;KEY=&amp;UserEmail=&amp;shenhe=&amp;passwd=&amp;purview=&amp;UserName=; ASPSESSIONIDQQRQBBQC=DGFMDJNCGOLLGKFNMLIPIDJK; ASPSESSIONIDSSRSCAQD=DECEDJNCBBDHMFKBIELAPLKG
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3130
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:52:06 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="79"><![CDATA[CWE-79]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[5.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix Cross Site Scripting Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/cross-site-scripting.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: How Cross-Site Scripting (XSS) Works]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-how-cross-site-scripting-xss-works/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[The Cross Site Scripting Faq]]></Database>
          <URL><![CDATA[http://www.cgisecurity.com/xss-faq.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Cross Site Scripting]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Cross_Site_Scripting]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Annihilation]]></Database>
          <URL><![CDATA[http://ha.ckers.org/blog/20060602/xss-annihilation/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Filter Evasion Cheat Sheet]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Cross site scripting]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Cross-site_scripting ]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How To: Prevent Cross-Site Scripting in ASP.NET]]></Database>
          <URL><![CDATA[http://msdn.microsoft.com/en-us/library/ms998274.aspx]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="23" color="red">
       <Name><![CDATA[Cross site scripting (verified)]]></Name>
       <ModuleName><![CDATA[Scripting (XSS.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">BigClassid</font></b> was set to <b><font color="dark">7'&quot;()&amp;%&lt;acx&gt;&lt;ScRiPt &gt;ktUr(9718)&lt;/ScRiPt&gt;</font></b>]]></Details>
       <Affects><![CDATA[/nosmallClass.asp]]></Affects>
       <Parameter><![CDATA[BigClassid]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[Malicious users may inject JavaScript, VBScript, ActiveX, HTML or Flash into a vulnerable application to fool a user in order to gather data from them.
An attacker can steal the session cookie and take over the account, impersonating the user.
It is also possible to modify the content of the page presented to the user.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to Cross Site Scripting (XSS) attacks.<br/><br/>
Cross site scripting (also referred to as XSS) is a vulnerability that allows an attacker to send malicious code (usually in the form of Javascript) to another user.
Because a browser cannot know if the script should be trusted or not, it will execute the script in the user context allowing the attacker to access any cookies or session tokens retained by the browser.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from The Cross Site Scripting FAQ - http://www.cgisecurity.com/articles/xss-faq.shtml </i> 

<h2>Introduction</h2>

<p>Websites today are more complex than ever, containing a lot of dynamic content making the experience for the user more enjoyable. Dynamic content is achieved through the use of web applications which can deliver different output to a user depending on their settings and needs. Dynamic websites suffer from a threat that static websites don't, called &quot;Cross Site Scripting&quot; (or XSS dubbed by other security professionals). Currently small informational tidbits about Cross Site Scripting holes exist but none really explain them to an average person or administrator. This FAQ was written to provide a better understanding of this emerging threat, and to give guidance on detection and prevention.</p>

<h2>&quot;What is Cross Site Scripting?&quot;</h2>

<p>Cross site scripting (also known as XSS) occurs when a web application gathers malicious data from a user. The data is usually gathered in the form of a hyperlink which contains malicious content within it. The user will most likely click on this link from another website, instant message, or simply just reading a web board or email message. Usually the attacker will encode the malicious portion of the link to the site in HEX (or other encoding methods) so the request is less suspicious looking to the user when clicked on. After the data is collected by the web application, it creates an output page for the user containing the malicious data that was originally sent to it, but in a manner to make it appear as valid content from the website. Many popular guestbook and forum programs allow users to submit posts with html and javascript embedded in them. If for example I was logged in as &quot;john&quot; and read a message by &quot;joe&quot; that contained malicious javascript in it, then it may be possible for &quot;joe&quot; to hijack my session just by reading his bulletin board post. Further details on how attacks like this are accomplished via &quot;cookie theft&quot; are explained in detail below.</p>

<h2>&quot;What does XSS and CSS mean?&quot;</h2>

<p>Often people refer to Cross Site Scripting as CSS. There has been a lot of confusion with Cascading Style Sheets (CSS) and cross site scripting. Some security people refer to Cross Site Scripting as XSS. If you hear someone say &quot;I found a XSS hole&quot;, they are talking about Cross Site Scripting for certain.</p>


<h2>&quot;What are the threats of Cross Site Scripting?&quot;</h2>

<p>Often attackers will inject JavaScript, VBScript, ActiveX, HTML, or Flash into a vulnerable application to fool a user (Read below for further details) in order to gather data from them. Everything from account hijacking, changing of user settings, cookie theft/poisoning, or false advertising is possible. New malicious uses are being found every day for XSS attacks. The post below by Brett Moore brings up a good point with regard to &quot;Denial Of Service&quot;, and potential &quot;auto-attacking&quot; of hosts if a user simply reads a post on a message board.</p>

<h2>&quot;What can I do to protect myself as a vendor?&quot;</h2>

<p>This is a simple answer. Never trust user input and always filter metacharacters. This will eliminate the majority of XSS attacks. Converting &lt; and &gt; to &amp;lt; and &amp;gt; is also suggested when it comes to script output. Remember XSS holes can be damaging and costly to your business if abused. Often attackers will disclose these holes to the public, which can erode customer and public confidence in the security and privacy of your organization's site. Filtering &lt; and &gt; alone will not solve all cross site scripting attacks and it is suggested you also attempt to filter out ( and ) by translating them to &amp;#40; and &amp;#41;, and also # and &amp; by translating them to &amp;#35 (#) and &amp;#38 (&amp;).</p>

<h2>&quot;What can I do to protect myself as a user?&quot;</h2>

<p>The easiest way to protect yourself as a user is to only follow links from the main website you wish to view. If you visit one website and it links to CNN for example, instead of clicking on it visit CNN's main site and use its search engine to find the content. This will probably eliminate ninety percent of the problem. Sometimes XSS can be executed automatically when you open an email, email attachment, read a guestbook, or bulletin board post. If you plan on opening an email, or reading a post on a public board from a person you don't know BE CAREFUL. One of the best ways to protect yourself is to turn off Javascript in your browser settings. In IE turn your security settings to high. This can prevent cookie theft, and in general is a safer thing to do.</p>

<h2>&quot;How common are XSS holes?&quot;</h2>

<p>Cross site scripting holes are gaining popularity among hackers as easy holes to find in large websites. Websites from FBI.gov, CNN.com, Time.com, Ebay, Yahoo, Apple computer, Microsoft, Zdnet, Wired, and Newsbytes have all had one form or another of XSS bugs.</p>

<p>Every month roughly 10-25 XSS holes are found in commercial products and advisories are published explaining the threat.</p>


<h2>&quot;Does encryption protect me?&quot;</h2>

<p>Websites that use SSL (https) are in no way more protected than websites that are not encrypted. The web applications work the same way as before, except the attack is taking place in an encrypted connection. People often think that because they see the lock on their browser it means everything is secure. This just isn't the case.</p>


<h2>&quot;Can XSS holes allow command execution?&quot;</h2>

<p>XSS holes can allow Javascript insertion, which may allow for limited execution. If an attacker were to exploit a browser flaw (browser hole) it could then be possible to execute commands on the client's side. If command execution were possible it would only be possible on the client side. In simple terms XSS holes can be used to help exploit other holes that may exist in your browser.</p>


<h2>&quot;What if I don't feel like fixing a CSS/XSS Hole?&quot;</h2>

<p>By not fixing an XSS hole this could allow possible user account compromise in portions of your site as they get added or updated. Cross Site Scripting has been found in various large sites recently and have been widely publicized. Left unrepaired, someone may discover it and publish a warning about your company. This may damage your company's reputation, depicting it as being lax on security matters. This of course also sends the message to your clients that you aren't dealing with every problem that arises, which turns into a trust issue. If your client doesn't trust you why would they wish to do business with you?</p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /nosmallClass.asp?BigClassid=7'%22()%26%25&lt;acx&gt;&lt;ScRiPt%20&gt;ktUr(9718)&lt;/ScRiPt&gt;&amp;TypeId=1 HTTP/1.1
Referer: http://zhaosheng.lyu.edu.cn
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA; Forcast2004%2D0089=sex=&amp;reglevel=&amp;fullname=&amp;UserLoginTimes=&amp;KEY=&amp;UserEmail=&amp;shenhe=&amp;passwd=&amp;purview=&amp;UserName=; ASPSESSIONIDQQRQBBQC=DGFMDJNCGOLLGKFNMLIPIDJK; ASPSESSIONIDSSRSCAQD=DECEDJNCBBDHMFKBIELAPLKG
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3130
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:52:11 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="79"><![CDATA[CWE-79]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[5.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix Cross Site Scripting Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/cross-site-scripting.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: How Cross-Site Scripting (XSS) Works]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-how-cross-site-scripting-xss-works/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[The Cross Site Scripting Faq]]></Database>
          <URL><![CDATA[http://www.cgisecurity.com/xss-faq.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Cross Site Scripting]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Cross_Site_Scripting]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Annihilation]]></Database>
          <URL><![CDATA[http://ha.ckers.org/blog/20060602/xss-annihilation/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Filter Evasion Cheat Sheet]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Cross site scripting]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Cross-site_scripting ]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How To: Prevent Cross-Site Scripting in ASP.NET]]></Database>
          <URL><![CDATA[http://msdn.microsoft.com/en-us/library/ms998274.aspx]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="24" color="red">
       <Name><![CDATA[Cross site scripting (verified)]]></Name>
       <ModuleName><![CDATA[Scripting (XSS.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">BigClassid</font></b> was set to <b><font color="dark">16'&quot;()&amp;%&lt;acx&gt;&lt;ScRiPt &gt;2mwF(9288)&lt;/ScRiPt&gt;</font></b>]]></Details>
       <Affects><![CDATA[/BigClass-zy.asp]]></Affects>
       <Parameter><![CDATA[BigClassid]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[Malicious users may inject JavaScript, VBScript, ActiveX, HTML or Flash into a vulnerable application to fool a user in order to gather data from them.
An attacker can steal the session cookie and take over the account, impersonating the user.
It is also possible to modify the content of the page presented to the user.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to Cross Site Scripting (XSS) attacks.<br/><br/>
Cross site scripting (also referred to as XSS) is a vulnerability that allows an attacker to send malicious code (usually in the form of Javascript) to another user.
Because a browser cannot know if the script should be trusted or not, it will execute the script in the user context allowing the attacker to access any cookies or session tokens retained by the browser.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from The Cross Site Scripting FAQ - http://www.cgisecurity.com/articles/xss-faq.shtml </i> 

<h2>Introduction</h2>

<p>Websites today are more complex than ever, containing a lot of dynamic content making the experience for the user more enjoyable. Dynamic content is achieved through the use of web applications which can deliver different output to a user depending on their settings and needs. Dynamic websites suffer from a threat that static websites don't, called &quot;Cross Site Scripting&quot; (or XSS dubbed by other security professionals). Currently small informational tidbits about Cross Site Scripting holes exist but none really explain them to an average person or administrator. This FAQ was written to provide a better understanding of this emerging threat, and to give guidance on detection and prevention.</p>

<h2>&quot;What is Cross Site Scripting?&quot;</h2>

<p>Cross site scripting (also known as XSS) occurs when a web application gathers malicious data from a user. The data is usually gathered in the form of a hyperlink which contains malicious content within it. The user will most likely click on this link from another website, instant message, or simply just reading a web board or email message. Usually the attacker will encode the malicious portion of the link to the site in HEX (or other encoding methods) so the request is less suspicious looking to the user when clicked on. After the data is collected by the web application, it creates an output page for the user containing the malicious data that was originally sent to it, but in a manner to make it appear as valid content from the website. Many popular guestbook and forum programs allow users to submit posts with html and javascript embedded in them. If for example I was logged in as &quot;john&quot; and read a message by &quot;joe&quot; that contained malicious javascript in it, then it may be possible for &quot;joe&quot; to hijack my session just by reading his bulletin board post. Further details on how attacks like this are accomplished via &quot;cookie theft&quot; are explained in detail below.</p>

<h2>&quot;What does XSS and CSS mean?&quot;</h2>

<p>Often people refer to Cross Site Scripting as CSS. There has been a lot of confusion with Cascading Style Sheets (CSS) and cross site scripting. Some security people refer to Cross Site Scripting as XSS. If you hear someone say &quot;I found a XSS hole&quot;, they are talking about Cross Site Scripting for certain.</p>


<h2>&quot;What are the threats of Cross Site Scripting?&quot;</h2>

<p>Often attackers will inject JavaScript, VBScript, ActiveX, HTML, or Flash into a vulnerable application to fool a user (Read below for further details) in order to gather data from them. Everything from account hijacking, changing of user settings, cookie theft/poisoning, or false advertising is possible. New malicious uses are being found every day for XSS attacks. The post below by Brett Moore brings up a good point with regard to &quot;Denial Of Service&quot;, and potential &quot;auto-attacking&quot; of hosts if a user simply reads a post on a message board.</p>

<h2>&quot;What can I do to protect myself as a vendor?&quot;</h2>

<p>This is a simple answer. Never trust user input and always filter metacharacters. This will eliminate the majority of XSS attacks. Converting &lt; and &gt; to &amp;lt; and &amp;gt; is also suggested when it comes to script output. Remember XSS holes can be damaging and costly to your business if abused. Often attackers will disclose these holes to the public, which can erode customer and public confidence in the security and privacy of your organization's site. Filtering &lt; and &gt; alone will not solve all cross site scripting attacks and it is suggested you also attempt to filter out ( and ) by translating them to &amp;#40; and &amp;#41;, and also # and &amp; by translating them to &amp;#35 (#) and &amp;#38 (&amp;).</p>

<h2>&quot;What can I do to protect myself as a user?&quot;</h2>

<p>The easiest way to protect yourself as a user is to only follow links from the main website you wish to view. If you visit one website and it links to CNN for example, instead of clicking on it visit CNN's main site and use its search engine to find the content. This will probably eliminate ninety percent of the problem. Sometimes XSS can be executed automatically when you open an email, email attachment, read a guestbook, or bulletin board post. If you plan on opening an email, or reading a post on a public board from a person you don't know BE CAREFUL. One of the best ways to protect yourself is to turn off Javascript in your browser settings. In IE turn your security settings to high. This can prevent cookie theft, and in general is a safer thing to do.</p>

<h2>&quot;How common are XSS holes?&quot;</h2>

<p>Cross site scripting holes are gaining popularity among hackers as easy holes to find in large websites. Websites from FBI.gov, CNN.com, Time.com, Ebay, Yahoo, Apple computer, Microsoft, Zdnet, Wired, and Newsbytes have all had one form or another of XSS bugs.</p>

<p>Every month roughly 10-25 XSS holes are found in commercial products and advisories are published explaining the threat.</p>


<h2>&quot;Does encryption protect me?&quot;</h2>

<p>Websites that use SSL (https) are in no way more protected than websites that are not encrypted. The web applications work the same way as before, except the attack is taking place in an encrypted connection. People often think that because they see the lock on their browser it means everything is secure. This just isn't the case.</p>


<h2>&quot;Can XSS holes allow command execution?&quot;</h2>

<p>XSS holes can allow Javascript insertion, which may allow for limited execution. If an attacker were to exploit a browser flaw (browser hole) it could then be possible to execute commands on the client's side. If command execution were possible it would only be possible on the client side. In simple terms XSS holes can be used to help exploit other holes that may exist in your browser.</p>


<h2>&quot;What if I don't feel like fixing a CSS/XSS Hole?&quot;</h2>

<p>By not fixing an XSS hole this could allow possible user account compromise in portions of your site as they get added or updated. Cross Site Scripting has been found in various large sites recently and have been widely publicized. Left unrepaired, someone may discover it and publish a warning about your company. This may damage your company's reputation, depicting it as being lax on security matters. This of course also sends the message to your clients that you aren't dealing with every problem that arises, which turns into a trust issue. If your client doesn't trust you why would they wish to do business with you?</p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /BigClass-zy.asp?BigClassid=16'%22()%26%25&lt;acx&gt;&lt;ScRiPt%20&gt;2mwF(9288)&lt;/ScRiPt&gt;&amp;TypeId=1 HTTP/1.1
Referer: http://zhaosheng.lyu.edu.cn
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA; Forcast2004%2D0089=sex=&amp;reglevel=&amp;fullname=&amp;UserLoginTimes=&amp;KEY=&amp;UserEmail=&amp;shenhe=&amp;passwd=&amp;purview=&amp;UserName=; ASPSESSIONIDQQRQBBQC=DGFMDJNCGOLLGKFNMLIPIDJK; ASPSESSIONIDSSRSCAQD=DECEDJNCBBDHMFKBIELAPLKG
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3131
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:52:16 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="79"><![CDATA[CWE-79]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[5.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix Cross Site Scripting Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/cross-site-scripting.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: How Cross-Site Scripting (XSS) Works]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-how-cross-site-scripting-xss-works/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[The Cross Site Scripting Faq]]></Database>
          <URL><![CDATA[http://www.cgisecurity.com/xss-faq.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Cross Site Scripting]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Cross_Site_Scripting]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Annihilation]]></Database>
          <URL><![CDATA[http://ha.ckers.org/blog/20060602/xss-annihilation/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Filter Evasion Cheat Sheet]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Cross site scripting]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Cross-site_scripting ]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How To: Prevent Cross-Site Scripting in ASP.NET]]></Database>
          <URL><![CDATA[http://msdn.microsoft.com/en-us/library/ms998274.aspx]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="25" color="red">
       <Name><![CDATA[Cross site scripting (verified)]]></Name>
       <ModuleName><![CDATA[Scripting (XSS.script)]]></ModuleName>
       <Details><![CDATA[URL encoded GET input <b><font color="dark">TypeId</font></b> was set to <b><font color="dark">1'&quot;()&amp;%&lt;acx&gt;&lt;ScRiPt &gt;2mwF(9573)&lt;/ScRiPt&gt;</font></b>]]></Details>
       <Affects><![CDATA[/BigClass-zy.asp]]></Affects>
       <Parameter><![CDATA[TypeId]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[high]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[Malicious users may inject JavaScript, VBScript, ActiveX, HTML or Flash into a vulnerable application to fool a user in order to gather data from them.
An attacker can steal the session cookie and take over the account, impersonating the user.
It is also possible to modify the content of the page presented to the user.]]></Impact>
       <Description><![CDATA[This script is possibly vulnerable to Cross Site Scripting (XSS) attacks.<br/><br/>
Cross site scripting (also referred to as XSS) is a vulnerability that allows an attacker to send malicious code (usually in the form of Javascript) to another user.
Because a browser cannot know if the script should be trusted or not, it will execute the script in the user context allowing the attacker to access any cookies or session tokens retained by the browser.]]></Description>
       <DetailedInformation><![CDATA[<i>Quote from The Cross Site Scripting FAQ - http://www.cgisecurity.com/articles/xss-faq.shtml </i> 

<h2>Introduction</h2>

<p>Websites today are more complex than ever, containing a lot of dynamic content making the experience for the user more enjoyable. Dynamic content is achieved through the use of web applications which can deliver different output to a user depending on their settings and needs. Dynamic websites suffer from a threat that static websites don't, called &quot;Cross Site Scripting&quot; (or XSS dubbed by other security professionals). Currently small informational tidbits about Cross Site Scripting holes exist but none really explain them to an average person or administrator. This FAQ was written to provide a better understanding of this emerging threat, and to give guidance on detection and prevention.</p>

<h2>&quot;What is Cross Site Scripting?&quot;</h2>

<p>Cross site scripting (also known as XSS) occurs when a web application gathers malicious data from a user. The data is usually gathered in the form of a hyperlink which contains malicious content within it. The user will most likely click on this link from another website, instant message, or simply just reading a web board or email message. Usually the attacker will encode the malicious portion of the link to the site in HEX (or other encoding methods) so the request is less suspicious looking to the user when clicked on. After the data is collected by the web application, it creates an output page for the user containing the malicious data that was originally sent to it, but in a manner to make it appear as valid content from the website. Many popular guestbook and forum programs allow users to submit posts with html and javascript embedded in them. If for example I was logged in as &quot;john&quot; and read a message by &quot;joe&quot; that contained malicious javascript in it, then it may be possible for &quot;joe&quot; to hijack my session just by reading his bulletin board post. Further details on how attacks like this are accomplished via &quot;cookie theft&quot; are explained in detail below.</p>

<h2>&quot;What does XSS and CSS mean?&quot;</h2>

<p>Often people refer to Cross Site Scripting as CSS. There has been a lot of confusion with Cascading Style Sheets (CSS) and cross site scripting. Some security people refer to Cross Site Scripting as XSS. If you hear someone say &quot;I found a XSS hole&quot;, they are talking about Cross Site Scripting for certain.</p>


<h2>&quot;What are the threats of Cross Site Scripting?&quot;</h2>

<p>Often attackers will inject JavaScript, VBScript, ActiveX, HTML, or Flash into a vulnerable application to fool a user (Read below for further details) in order to gather data from them. Everything from account hijacking, changing of user settings, cookie theft/poisoning, or false advertising is possible. New malicious uses are being found every day for XSS attacks. The post below by Brett Moore brings up a good point with regard to &quot;Denial Of Service&quot;, and potential &quot;auto-attacking&quot; of hosts if a user simply reads a post on a message board.</p>

<h2>&quot;What can I do to protect myself as a vendor?&quot;</h2>

<p>This is a simple answer. Never trust user input and always filter metacharacters. This will eliminate the majority of XSS attacks. Converting &lt; and &gt; to &amp;lt; and &amp;gt; is also suggested when it comes to script output. Remember XSS holes can be damaging and costly to your business if abused. Often attackers will disclose these holes to the public, which can erode customer and public confidence in the security and privacy of your organization's site. Filtering &lt; and &gt; alone will not solve all cross site scripting attacks and it is suggested you also attempt to filter out ( and ) by translating them to &amp;#40; and &amp;#41;, and also # and &amp; by translating them to &amp;#35 (#) and &amp;#38 (&amp;).</p>

<h2>&quot;What can I do to protect myself as a user?&quot;</h2>

<p>The easiest way to protect yourself as a user is to only follow links from the main website you wish to view. If you visit one website and it links to CNN for example, instead of clicking on it visit CNN's main site and use its search engine to find the content. This will probably eliminate ninety percent of the problem. Sometimes XSS can be executed automatically when you open an email, email attachment, read a guestbook, or bulletin board post. If you plan on opening an email, or reading a post on a public board from a person you don't know BE CAREFUL. One of the best ways to protect yourself is to turn off Javascript in your browser settings. In IE turn your security settings to high. This can prevent cookie theft, and in general is a safer thing to do.</p>

<h2>&quot;How common are XSS holes?&quot;</h2>

<p>Cross site scripting holes are gaining popularity among hackers as easy holes to find in large websites. Websites from FBI.gov, CNN.com, Time.com, Ebay, Yahoo, Apple computer, Microsoft, Zdnet, Wired, and Newsbytes have all had one form or another of XSS bugs.</p>

<p>Every month roughly 10-25 XSS holes are found in commercial products and advisories are published explaining the threat.</p>


<h2>&quot;Does encryption protect me?&quot;</h2>

<p>Websites that use SSL (https) are in no way more protected than websites that are not encrypted. The web applications work the same way as before, except the attack is taking place in an encrypted connection. People often think that because they see the lock on their browser it means everything is secure. This just isn't the case.</p>


<h2>&quot;Can XSS holes allow command execution?&quot;</h2>

<p>XSS holes can allow Javascript insertion, which may allow for limited execution. If an attacker were to exploit a browser flaw (browser hole) it could then be possible to execute commands on the client's side. If command execution were possible it would only be possible on the client side. In simple terms XSS holes can be used to help exploit other holes that may exist in your browser.</p>


<h2>&quot;What if I don't feel like fixing a CSS/XSS Hole?&quot;</h2>

<p>By not fixing an XSS hole this could allow possible user account compromise in portions of your site as they get added or updated. Cross Site Scripting has been found in various large sites recently and have been widely publicized. Left unrepaired, someone may discover it and publish a warning about your company. This may damage your company's reputation, depicting it as being lax on security matters. This of course also sends the message to your clients that you aren't dealing with every problem that arises, which turns into a trust issue. If your client doesn't trust you why would they wish to do business with you?</p>]]></DetailedInformation>
       <Recommendation><![CDATA[Your script should filter metacharacters from user input.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /BigClass-zy.asp?BigClassid=16&amp;TypeId=1'%22()%26%25&lt;acx&gt;&lt;ScRiPt%20&gt;2mwF(9573)&lt;/ScRiPt&gt; HTTP/1.1
Referer: http://zhaosheng.lyu.edu.cn
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA; Forcast2004%2D0089=sex=&amp;reglevel=&amp;fullname=&amp;UserLoginTimes=&amp;KEY=&amp;UserEmail=&amp;shenhe=&amp;passwd=&amp;purview=&amp;UserName=; ASPSESSIONIDQQRQBBQC=DGFMDJNCGOLLGKFNMLIPIDJK; ASPSESSIONIDSSRSCAQD=DECEDJNCBBDHMFKBIELAPLKG
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*

]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3130
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:52:17 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="79"><![CDATA[CWE-79]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N]]></Descriptor>
          <Score><![CDATA[5.3]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[None]]></C>
          <Cdesc><![CDATA[There is no loss of confidentiality within the impacted component.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Acunetix Cross Site Scripting Attack]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/cross-site-scripting.htm]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[VIDEO: How Cross-Site Scripting (XSS) Works]]></Database>
          <URL><![CDATA[http://www.acunetix.com/blog/web-security-zone/video-how-cross-site-scripting-xss-works/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[The Cross Site Scripting Faq]]></Database>
          <URL><![CDATA[http://www.cgisecurity.com/xss-faq.html]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP Cross Site Scripting]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/Cross_Site_Scripting]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Annihilation]]></Database>
          <URL><![CDATA[http://ha.ckers.org/blog/20060602/xss-annihilation/]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[XSS Filter Evasion Cheat Sheet]]></Database>
          <URL><![CDATA[https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[Cross site scripting]]></Database>
          <URL><![CDATA[http://en.wikipedia.org/wiki/Cross-site_scripting ]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[OWASP PHP Top 5]]></Database>
          <URL><![CDATA[http://www.owasp.org/index.php/PHP_Top_5]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[How To: Prevent Cross-Site Scripting in ASP.NET]]></Database>
          <URL><![CDATA[http://msdn.microsoft.com/en-us/library/ms998274.aspx]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="26" color="green">
       <Name><![CDATA[Email address found]]></Name>
       <ModuleName><![CDATA[Scripting (Text_Search_File.script)]]></ModuleName>
       <Details><![CDATA[<br/>Pattern found: <pre wrap="virtual"><font color="blue">lyzs@lyu.edu.cn
</font></pre>]]></Details>
       <Affects><![CDATA[/index.asp]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[info]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[Email addresses posted on Web sites may attract spam.]]></Impact>
       <Description><![CDATA[One or more email addresses have been found on this page. The majority of spam comes from email addresses harvested off the internet. The spam-bots (also known as email harvesters and email extractors) are programs that scour the internet looking for email addresses on any website they come across.  Spambot programs look for strings like myname@mydomain.com and then record any addresses found.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Check references for details on how to solve this problem.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /index.asp HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://zhaosheng.lyu.edu.cn/
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: filelist;aspectalerts
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*
]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 28593
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:47:07 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="200"><![CDATA[CWE-200]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:N/A:N]]></Descriptor>
          <Score><![CDATA[5.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N]]></Descriptor>
          <Score><![CDATA[7.5]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no loss of integrity within the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Email Address Disclosed on Website Can be Used for Spam]]></Database>
          <URL><![CDATA[http://www.websitedefender.com/web-security/email-address-disclosure/]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="27" color="green">
       <Name><![CDATA[Email address found]]></Name>
       <ModuleName><![CDATA[Scripting (Text_Search_File.script)]]></ModuleName>
       <Details><![CDATA[<br/>Pattern found: <pre wrap="virtual"><font color="blue">dongqinl@163.com
</font></pre>]]></Details>
       <Affects><![CDATA[/ReadNews.asp]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[info]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[Email addresses posted on Web sites may attract spam.]]></Impact>
       <Description><![CDATA[One or more email addresses have been found on this page. The majority of spam comes from email addresses harvested off the internet. The spam-bots (also known as email harvesters and email extractors) are programs that scour the internet looking for email addresses on any website they come across.  Spambot programs look for strings like myname@mydomain.com and then record any addresses found.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Check references for details on how to solve this problem.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /ReadNews.asp HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://zhaosheng.lyu.edu.cn/
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: filelist;aspectalerts
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*
]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3136
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:47:06 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="200"><![CDATA[CWE-200]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:N/A:N]]></Descriptor>
          <Score><![CDATA[5.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N]]></Descriptor>
          <Score><![CDATA[7.5]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no loss of integrity within the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Email Address Disclosed on Website Can be Used for Spam]]></Database>
          <URL><![CDATA[http://www.websitedefender.com/web-security/email-address-disclosure/]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="28" color="green">
       <Name><![CDATA[Email address found]]></Name>
       <ModuleName><![CDATA[Scripting (Text_Search_File.script)]]></ModuleName>
       <Details><![CDATA[<br/>Pattern found: <pre wrap="virtual"><font color="blue">dongqinl@163.com
</font></pre>]]></Details>
       <Affects><![CDATA[/BigClass.asp]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[info]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[Email addresses posted on Web sites may attract spam.]]></Impact>
       <Description><![CDATA[One or more email addresses have been found on this page. The majority of spam comes from email addresses harvested off the internet. The spam-bots (also known as email harvesters and email extractors) are programs that scour the internet looking for email addresses on any website they come across.  Spambot programs look for strings like myname@mydomain.com and then record any addresses found.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Check references for details on how to solve this problem.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /BigClass.asp HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://zhaosheng.lyu.edu.cn/
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: filelist;aspectalerts
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*
]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3134
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:47:07 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="200"><![CDATA[CWE-200]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:N/A:N]]></Descriptor>
          <Score><![CDATA[5.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N]]></Descriptor>
          <Score><![CDATA[7.5]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no loss of integrity within the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Email Address Disclosed on Website Can be Used for Spam]]></Database>
          <URL><![CDATA[http://www.websitedefender.com/web-security/email-address-disclosure/]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="29" color="green">
       <Name><![CDATA[Email address found]]></Name>
       <ModuleName><![CDATA[Scripting (Text_Search_File.script)]]></ModuleName>
       <Details><![CDATA[<br/>Pattern found: <pre wrap="virtual"><font color="blue">dongqinl@163.com
</font></pre>]]></Details>
       <Affects><![CDATA[/bigClass.asp]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[info]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[Email addresses posted on Web sites may attract spam.]]></Impact>
       <Description><![CDATA[One or more email addresses have been found on this page. The majority of spam comes from email addresses harvested off the internet. The spam-bots (also known as email harvesters and email extractors) are programs that scour the internet looking for email addresses on any website they come across.  Spambot programs look for strings like myname@mydomain.com and then record any addresses found.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Check references for details on how to solve this problem.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /bigClass.asp HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://zhaosheng.lyu.edu.cn/
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: filelist;aspectalerts
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*
]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3134
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:47:07 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="200"><![CDATA[CWE-200]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:N/A:N]]></Descriptor>
          <Score><![CDATA[5.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N]]></Descriptor>
          <Score><![CDATA[7.5]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no loss of integrity within the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Email Address Disclosed on Website Can be Used for Spam]]></Database>
          <URL><![CDATA[http://www.websitedefender.com/web-security/email-address-disclosure/]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="30" color="green">
       <Name><![CDATA[Email address found]]></Name>
       <ModuleName><![CDATA[Scripting (Text_Search_File.script)]]></ModuleName>
       <Details><![CDATA[<br/>Pattern found: <pre wrap="virtual"><font color="blue">dongqinl@163.com
</font></pre>]]></Details>
       <Affects><![CDATA[/BigClass-ld.asp]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[info]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[Email addresses posted on Web sites may attract spam.]]></Impact>
       <Description><![CDATA[One or more email addresses have been found on this page. The majority of spam comes from email addresses harvested off the internet. The spam-bots (also known as email harvesters and email extractors) are programs that scour the internet looking for email addresses on any website they come across.  Spambot programs look for strings like myname@mydomain.com and then record any addresses found.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Check references for details on how to solve this problem.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /BigClass-ld.asp HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://zhaosheng.lyu.edu.cn/
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: filelist;aspectalerts
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*
]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3134
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:47:07 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="200"><![CDATA[CWE-200]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:N/A:N]]></Descriptor>
          <Score><![CDATA[5.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N]]></Descriptor>
          <Score><![CDATA[7.5]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no loss of integrity within the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Email Address Disclosed on Website Can be Used for Spam]]></Database>
          <URL><![CDATA[http://www.websitedefender.com/web-security/email-address-disclosure/]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="31" color="green">
       <Name><![CDATA[Email address found]]></Name>
       <ModuleName><![CDATA[Scripting (Text_Search_File.script)]]></ModuleName>
       <Details><![CDATA[<br/>Pattern found: <pre wrap="virtual"><font color="blue">dongqinl@163.com
</font></pre>]]></Details>
       <Affects><![CDATA[/bigClass-zy.asp]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[info]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[Email addresses posted on Web sites may attract spam.]]></Impact>
       <Description><![CDATA[One or more email addresses have been found on this page. The majority of spam comes from email addresses harvested off the internet. The spam-bots (also known as email harvesters and email extractors) are programs that scour the internet looking for email addresses on any website they come across.  Spambot programs look for strings like myname@mydomain.com and then record any addresses found.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Check references for details on how to solve this problem.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /bigClass-zy.asp HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://zhaosheng.lyu.edu.cn/
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: filelist;aspectalerts
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*
]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3134
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:47:07 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="200"><![CDATA[CWE-200]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:N/A:N]]></Descriptor>
          <Score><![CDATA[5.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N]]></Descriptor>
          <Score><![CDATA[7.5]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no loss of integrity within the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Email Address Disclosed on Website Can be Used for Spam]]></Database>
          <URL><![CDATA[http://www.websitedefender.com/web-security/email-address-disclosure/]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="32" color="green">
       <Name><![CDATA[Email address found]]></Name>
       <ModuleName><![CDATA[Scripting (Text_Search_File.script)]]></ModuleName>
       <Details><![CDATA[<br/>Pattern found: <pre wrap="virtual"><font color="blue">dongqinl@163.com
</font></pre>]]></Details>
       <Affects><![CDATA[/nosmallClass.asp]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[info]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[Email addresses posted on Web sites may attract spam.]]></Impact>
       <Description><![CDATA[One or more email addresses have been found on this page. The majority of spam comes from email addresses harvested off the internet. The spam-bots (also known as email harvesters and email extractors) are programs that scour the internet looking for email addresses on any website they come across.  Spambot programs look for strings like myname@mydomain.com and then record any addresses found.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Check references for details on how to solve this problem.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /nosmallClass.asp HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://zhaosheng.lyu.edu.cn/
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: filelist;aspectalerts
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*
]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3134
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:47:07 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="200"><![CDATA[CWE-200]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:N/A:N]]></Descriptor>
          <Score><![CDATA[5.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N]]></Descriptor>
          <Score><![CDATA[7.5]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no loss of integrity within the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Email Address Disclosed on Website Can be Used for Spam]]></Database>
          <URL><![CDATA[http://www.websitedefender.com/web-security/email-address-disclosure/]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="33" color="green">
       <Name><![CDATA[Email address found]]></Name>
       <ModuleName><![CDATA[Scripting (Text_Search_File.script)]]></ModuleName>
       <Details><![CDATA[<br/>Pattern found: <pre wrap="virtual"><font color="blue">dongqinl@163.com
</font></pre>]]></Details>
       <Affects><![CDATA[/readnews-zy.asp]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[info]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[Email addresses posted on Web sites may attract spam.]]></Impact>
       <Description><![CDATA[One or more email addresses have been found on this page. The majority of spam comes from email addresses harvested off the internet. The spam-bots (also known as email harvesters and email extractors) are programs that scour the internet looking for email addresses on any website they come across.  Spambot programs look for strings like myname@mydomain.com and then record any addresses found.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Check references for details on how to solve this problem.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /readnews-zy.asp HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://zhaosheng.lyu.edu.cn/bigClass-zy.asp
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: filelist;aspectalerts
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*
]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3136
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:47:11 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="200"><![CDATA[CWE-200]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:N/A:N]]></Descriptor>
          <Score><![CDATA[5.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N]]></Descriptor>
          <Score><![CDATA[7.5]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no loss of integrity within the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Email Address Disclosed on Website Can be Used for Spam]]></Database>
          <URL><![CDATA[http://www.websitedefender.com/web-security/email-address-disclosure/]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="34" color="orange">
       <Name><![CDATA[Vulnerable Javascript library]]></Name>
       <ModuleName><![CDATA[Scripting (Javascript_Libraries_Audit.script)]]></ModuleName>
       <Details><![CDATA[Detected Javascript library <b><font color="dark">jquery</font></b> version <font color="dark"><b>1.7</font></b>.<br/>The version was detected from <b>file content</b>.]]></Details>
       <Affects><![CDATA[/ebook4/js/jquery.min.1.7.js]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[medium]]></Severity>
       <Type><![CDATA[Configuration]]></Type>
       <Impact><![CDATA[Consult Web References for more information.]]></Impact>
       <Description><![CDATA[You are using a vulnerable Javascript library. One or more vulnerabilities were reported for this version of the Javascript library. Consult Attack details and Web References for more information about the affected library and the vulnerabilities that were reported.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Upgrade to the latest version.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /ebook4/js/jquery.min.1.7.js HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://zhaosheng.lyu.edu.cn/ebook4/index.html
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: filelist;aspectalerts
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA; Forcast2004%2D0089=sex=&amp;reglevel=&amp;fullname=&amp;UserLoginTimes=&amp;KEY=&amp;UserEmail=&amp;shenhe=&amp;passwd=&amp;purview=&amp;UserName=
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*
]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Content-Type: application/x-javascript
Last-Modified: Sun, 04 Dec 2011 02:52:34 GMT
Accept-Ranges: bytes
ETag: &quot;085e1c52fb2cc1:0&quot;
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:47:11 GMT
Content-Length: 94020
]]></Response>
       </TechnicalDetails>
       <CWE id="16"><![CDATA[CWE-16]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N]]></Descriptor>
          <Score><![CDATA[6.5]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[Low]]></C>
          <Cdesc><![CDATA[There is some loss of confidentiality. Access to some restricted information is obtained, but the attacker does not have control over what information is obtained, or the amount or kind of loss is constrained.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[http://bugs.jquery.com/ticket/11290]]></Database>
          <URL><![CDATA[http://bugs.jquery.com/ticket/11290]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[http://research.insecurelabs.org/jquery/test/]]></Database>
          <URL><![CDATA[http://research.insecurelabs.org/jquery/test/]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="35" color="green">
       <Name><![CDATA[Email address found]]></Name>
       <ModuleName><![CDATA[Scripting (Text_Search_File.script)]]></ModuleName>
       <Details><![CDATA[<br/>Pattern found: <pre wrap="virtual"><font color="blue">dongqinl@163.com
</font></pre>]]></Details>
       <Affects><![CDATA[/BigClass-zy.asp]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[info]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[Email addresses posted on Web sites may attract spam.]]></Impact>
       <Description><![CDATA[One or more email addresses have been found on this page. The majority of spam comes from email addresses harvested off the internet. The spam-bots (also known as email harvesters and email extractors) are programs that scour the internet looking for email addresses on any website they come across.  Spambot programs look for strings like myname@mydomain.com and then record any addresses found.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Check references for details on how to solve this problem.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /BigClass-zy.asp HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://zhaosheng.lyu.edu.cn/readnews-zy.asp
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: filelist;aspectalerts
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA; Forcast2004%2D0089=sex=&amp;reglevel=&amp;fullname=&amp;UserLoginTimes=&amp;KEY=&amp;UserEmail=&amp;shenhe=&amp;passwd=&amp;purview=&amp;UserName=
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*
]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 3134
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:47:12 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="200"><![CDATA[CWE-200]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:N/A:N]]></Descriptor>
          <Score><![CDATA[5.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N]]></Descriptor>
          <Score><![CDATA[7.5]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no loss of integrity within the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Email Address Disclosed on Website Can be Used for Spam]]></Database>
          <URL><![CDATA[http://www.websitedefender.com/web-security/email-address-disclosure/]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="36" color="orange">
       <Name><![CDATA[Vulnerable Javascript library]]></Name>
       <ModuleName><![CDATA[Scripting (Javascript_Libraries_Audit.script)]]></ModuleName>
       <Details><![CDATA[Detected Javascript library <b><font color="dark">jquery</font></b> version <font color="dark"><b>1.7</font></b>.<br/>The version was detected from <b>file content</b>.]]></Details>
       <Affects><![CDATA[/ebook2017/js/jquery.min.1.7.js]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[medium]]></Severity>
       <Type><![CDATA[Configuration]]></Type>
       <Impact><![CDATA[Consult Web References for more information.]]></Impact>
       <Description><![CDATA[You are using a vulnerable Javascript library. One or more vulnerabilities were reported for this version of the Javascript library. Consult Attack details and Web References for more information about the affected library and the vulnerabilities that were reported.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Upgrade to the latest version.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /ebook2017/js/jquery.min.1.7.js HTTP/1.1
Pragma: no-cache
Cache-Control: no-cache
Referer: http://zhaosheng.lyu.edu.cn/ebook2017/index.html
Acunetix-Aspect: enabled
Acunetix-Aspect-Password: 082119f75623eb7abd7bf357698ff66c
Acunetix-Aspect-Queries: filelist;aspectalerts
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA; Forcast2004%2D0089=sex=&amp;reglevel=&amp;fullname=&amp;UserLoginTimes=&amp;KEY=&amp;UserEmail=&amp;shenhe=&amp;passwd=&amp;purview=&amp;UserName=; ASPSESSIONIDQQRQBBQC=DGFMDJNCGOLLGKFNMLIPIDJK; ASPSESSIONIDSSRSCAQD=DECEDJNCBBDHMFKBIELAPLKG
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*
]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Content-Type: application/x-javascript
Last-Modified: Sun, 04 Dec 2011 02:52:34 GMT
Accept-Ranges: bytes
ETag: &quot;085e1c52fb2cc1:0&quot;
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:51:15 GMT
Content-Length: 94020
]]></Response>
       </TechnicalDetails>
       <CWE id="16"><![CDATA[CWE-16]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:P/A:N]]></Descriptor>
          <Score><![CDATA[6.4]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[Partial]]></I>
          <Idesc><![CDATA[Modification of some system files or information is possible, but the attacker does not have control over what can be modified, or the scope of what the attacker can affect is limited.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N]]></Descriptor>
          <Score><![CDATA[6.5]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[Low]]></C>
          <Cdesc><![CDATA[There is some loss of confidentiality. Access to some restricted information is obtained, but the attacker does not have control over what information is obtained, or the amount or kind of loss is constrained.]]></Cdesc>
          <I><![CDATA[Low]]></I>
          <Idesc><![CDATA[Modification of data is possible, but the attacker does not have control over the consequence of a modification, or the amount of modification is constrained. The data modification does not have a direct, serious impact on the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[http://bugs.jquery.com/ticket/11290]]></Database>
          <URL><![CDATA[http://bugs.jquery.com/ticket/11290]]></URL>
        </Reference>
        <Reference>
          <Database><![CDATA[http://research.insecurelabs.org/jquery/test/]]></Database>
          <URL><![CDATA[http://research.insecurelabs.org/jquery/test/]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="37" color="green">
       <Name><![CDATA[Email address found]]></Name>
       <ModuleName><![CDATA[Scripting (Text_Search_Dir.script)]]></ModuleName>
       <Details><![CDATA[<br/>Pattern found: <pre wrap="virtual"><font color="blue">lyzs@lyu.edu.cn
</font></pre>]]></Details>
       <Affects><![CDATA[/]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[info]]></Severity>
       <Type><![CDATA[Informational]]></Type>
       <Impact><![CDATA[Email addresses posted on Web sites may attract spam.]]></Impact>
       <Description><![CDATA[One or more email addresses have been found on this page. The majority of spam comes from email addresses harvested off the internet. The spam-bots (also known as email harvesters and email extractors) are programs that scour the internet looking for email addresses on any website they come across.  Spambot programs look for strings like myname@mydomain.com and then record any addresses found.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Check references for details on how to solve this problem.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET / HTTP/1.1
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21
Accept: */*
]]></Request>
        <Response><![CDATA[HTTP/1.1 200 OK
Cache-Control: private
Content-Length: 28593
Content-Type: text/html
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:47:07 GMT
]]></Response>
       </TechnicalDetails>
       <CWE id="200"><![CDATA[CWE-200]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:N/A:N]]></Descriptor>
          <Score><![CDATA[5.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N]]></Descriptor>
          <Score><![CDATA[7.5]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no loss of integrity within the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Email Address Disclosed on Website Can be Used for Spam]]></Database>
          <URL><![CDATA[http://www.websitedefender.com/web-security/email-address-disclosure/]]></URL>
        </Reference>
       </References>
      </ReportItem>

      <ReportItem id="38" color="blue">
       <Name><![CDATA[Possible sensitive directories]]></Name>
       <ModuleName><![CDATA[Scripting (Possible_Sensitive_Directories.script)]]></ModuleName>
       <Details><![CDATA[No details are available.]]></Details>
       <Affects><![CDATA[/inc]]></Affects>
       <Parameter><![CDATA[]]></Parameter>
       <AOP_SourceFile><![CDATA[]]></AOP_SourceFile>
       <AOP_SourceLine>0</AOP_SourceLine>
       <AOP_Additional><![CDATA[]]></AOP_Additional>
       <IsFalsePositive><![CDATA[False]]></IsFalsePositive>
       <Severity><![CDATA[low]]></Severity>
       <Type><![CDATA[Validation]]></Type>
       <Impact><![CDATA[This directory may expose sensitive information that could help a malicious user to prepare more advanced attacks.]]></Impact>
       <Description><![CDATA[A possible sensitive directory has been found. This directory is not directly linked from the website.This check looks for common sensitive resources like backup directories, database dumps, administration pages, temporary directories. Each one of these directories could help an attacker to learn more about his target.]]></Description>
       <DetailedInformation><![CDATA[]]></DetailedInformation>
       <Recommendation><![CDATA[Restrict access to this directory or remove it from the website.]]></Recommendation>
       <TechnicalDetails>
        <Request><![CDATA[GET /inc HTTP/1.1
Accept: acunetix/wvs
Range: bytes=0-99999
Cookie: ASPSESSIONIDQQQCBAAS=JIILCNHCPCBGDIEAPPJIMMAA; Forcast2004%2D0089=sex=&amp;reglevel=&amp;fullname=&amp;UserLoginTimes=&amp;KEY=&amp;UserEmail=&amp;shenhe=&amp;passwd=&amp;purview=&amp;UserName=; ASPSESSIONIDQQRQBBQC=DGFMDJNCGOLLGKFNMLIPIDJK; ASPSESSIONIDSSRSCAQD=DECEDJNCBBDHMFKBIELAPLKG
Host: zhaosheng.lyu.edu.cn
Connection: Keep-alive
Accept-Encoding: gzip,deflate
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21

]]></Request>
        <Response><![CDATA[HTTP/1.1 301 Moved Permanently
Content-Type: text/html; charset=UTF-8
Location: http://zhaosheng.lyu.edu.cn/inc/
Server: Microsoft-IIS/7.0
X-Powered-By: ASP.NET
Date: Fri, 11 Aug 2017 19:57:06 GMT
Content-Length: 155
]]></Response>
       </TechnicalDetails>
       <CWE id="200"><![CDATA[CWE-200]]></CWE>
      <CVEList></CVEList>
       <CVSS>
          <Descriptor><![CDATA[AV:N/AC:L/Au:N/C:P/I:N/A:N]]></Descriptor>
          <Score><![CDATA[5.0]]></Score>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable software is bound to the network stack and the attacker does not require local network access or local access.]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist.]]></ACdesc>
          <Au><![CDATA[None]]></Au>
          <Audesc><![CDATA[Authentication is not required to exploit the vulnerability.]]></Audesc>
          <C><![CDATA[Partial]]></C>
          <Cdesc><![CDATA[There is considerable informational disclosure. Access to some system files is possible, but the attacker does not have control over what is obtained, or the scope of the loss is constrained.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no impact to the integrity of the system.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to the availability of the system.]]></Adesc>
          <E><![CDATA[]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS>
       <CVSS3>
          <Descriptor><![CDATA[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N]]></Descriptor>
          <Score><![CDATA[7.5]]></Score>
          <TempScore><![CDATA[]]></TempScore>
          <EnvScore><![CDATA[]]></EnvScore>
          <AV><![CDATA[Network]]></AV>
          <AVdesc><![CDATA[A vulnerability exploitable with network access means the vulnerable component is bound to the network stack and the attacker's path is through OSI layer 3 (the network layer). Such a vulnerability is often termed "remotely exploitable" and can be thought of as an attack being exploitable one or more network hops away (e.g. across layer 3 boundaries from routers).]]></AVdesc>
          <AC><![CDATA[Low]]></AC>
          <ACdesc><![CDATA[Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success against the vulnerable component.]]></ACdesc>
          <PR><![CDATA[None]]></PR>
          <PRdesc><![CDATA[The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files to carry out an attack.]]></PRdesc>
          <UI><![CDATA[None]]></UI>
          <UIdesc><![CDATA[The vulnerable system can be exploited without interaction from any user.]]></UIdesc>
          <S><![CDATA[Unchanged]]></S>
          <Sdesc><![CDATA[An exploited vulnerability can only affect resources managed by the same authority. In this case the vulnerable component and the impacted component are the same.]]></Sdesc>
          <C><![CDATA[High]]></C>
          <Cdesc><![CDATA[There is total loss of confidentiality, resulting in all resources within the impacted component being divulged to the attacker. Alternatively, access to only some restricted information is obtained, but the disclosed information presents a direct, serious impact.]]></Cdesc>
          <I><![CDATA[None]]></I>
          <Idesc><![CDATA[There is no loss of integrity within the impacted component.]]></Idesc>
          <A><![CDATA[None]]></A>
          <Adesc><![CDATA[There is no impact to availability within the impacted component.]]></Adesc>
          <E><![CDATA[X]]></E>
          <Edesc><![CDATA[]]></Edesc>
          <RL><![CDATA[X]]></RL>
          <RLdesc><![CDATA[]]></RLdesc>
          <RC><![CDATA[X]]></RC>
          <RCdesc><![CDATA[]]></RCdesc>
       </CVSS3>
       <References>
        <Reference>
          <Database><![CDATA[Web Server Security and Database Server Security]]></Database>
          <URL><![CDATA[http://www.acunetix.com/websitesecurity/webserver-security.htm]]></URL>
        </Reference>
       </References>
      </ReportItem>
		</ReportItems>
 </Scan>
</ScanGroup>
